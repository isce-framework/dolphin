%!PS-Adobe-3.1
%ADO_DSC_Encoding: UTF8
%%Title: dolphin-modules.pdf
%%Creator: (Adobe Acrobat 24.2.0)
%%For: staniewi
%%CreationDate: 11/4/24, 10:01â€¯PM
%%BoundingBox: 0 0 563 319
%%HiResBoundingBox: 0 0 562.0801 318.9600
%%CropBox: 0 0 562.0801 318.9600
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf
{load def}bdf
/ddf
{put}bdf
/xddf
{3 -1 roll put}bdf
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2
	ps_level 2 ge
def
/level3
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if
		}
		{
		/DataSource load type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse
	/AGMCORE_avoid_L2_sep_space
		version cvr 2012 lt
		level2 and
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
		userdict/Adobe_AGM_OnHost_Seps known
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer
		}
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse
						}if
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name
										CSA map_csa
										MappedCSA
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop
		ColorSpaceFamily/Separation eq
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq
		currentdict/Components known and
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def
			}{
				/name xdf
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put
	end
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if
		0 exch rlineto
		currentfile token pop dup type/stringtype eq
			{pop exit}if
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc
	{
	 dup stringwidth 0 0 moveto
	 2 index true charpath pathbbox
	 0 -1
	 7 index 2 div .88
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc
	{
	 dup stringwidth
	 pop 2 div neg -0.88
	2 copy
	moveto
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup
				_setwidthProc
				3 copy
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc
				3 copy
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector
	{
		 dup/FontType get 0 eq
		{
		1 index ct_Type0CopyFont
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse
		 exch
	}
	forall
	pop
	]
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin
		ct_CopyFont
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
		/ct_SyntheticBold true def
		currentdict
		end
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict
begin
	 /.notdef 0 def
	 currentdict
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{
	/GlyphDirectory
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup
   length 1 add dict
   begin
		ct_CopyFont
		/Encoding Encoding dup length array copy
		dup
		4 -1 roll
		0 exch put
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph
{
 	gsave
	8 -1 roll pop
	7 1 roll
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
	dup  9 1 roll
	{
		currentdict /StrokeWidth 2 copy known
		{
			get 2 div
			0 ct_FontMatrix dtransform pop
			5 1 roll
			4 -1 roll 4 index sub
			4 1 roll
			3 -1 roll 4 index sub
			3 1 roll
			exch 4 index add exch
			4 index add
			5 -1 roll pop
		}
		{
			pop pop
		}
		ifelse
	}
    if
	setcachedevice
        ct_FontMatrix concat
        ct_PSPathOps begin
		exec
	end
	{
		currentdict /StrokeWidth 2 copy known
			{ get }
			{ pop pop 0 }
  	    ifelse
		setlinewidth stroke
	}
	{
	    fill
	}
	ifelse
    grestore
} def
/ct_PSPathOps 4 dict dup begin
	/m {moveto} def
	/l {lineto} def
	/c {curveto} def
	/cp {closepath} def
end
def
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc
{
   2 index findfont dup length 4 add dict
   begin
	ct_CopyFont
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def
         currentdict
      end
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore
		ct_MakeGlyphProc
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM
{
556 0 24 -19 541 703
	{
	541 628 m
	510 669 442 703 354 703 c
	201 703 117 607 101 444 c
	50 444 l
	25 372 l
	97 372 l
	97 301 l
	49 301 l
	24 229 l
	103 229 l
	124 67 209 -19 350 -19 c
	435 -19 501 25 509 32 c
	509 131 l
	492 105 417 60 343 60 c
	267 60 204 127 197 229 c
	406 229 l
	430 301 l
	191 301 l
	191 372 l
	455 372 l
	479 444 l
	194 444 l
	201 531 245 624 348 624 c
	433 624 484 583 509 534 c
	cp
	556 0 m
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM
{
500 0 10 -12 484 692
	{
	347 298 m
	171 298 l
	170 310 170 322 170 335 c
	170 362 l
	362 362 l
	374 403 l
	172 403 l
	184 580 244 642 308 642 c
	380 642 434 574 457 457 c
	481 462 l
	474 691 l
	449 691 l
	433 670 429 657 410 657 c
	394 657 360 692 299 692 c
	204 692 94 604 73 403 c
	22 403 l
	10 362 l
	70 362 l
	69 352 69 341 69 330 c
	69 319 69 308 70 298 c
	22 298 l
	10 257 l
	73 257 l
	97 57 216 -12 295 -12 c
	364 -12 427 25 484 123 c
	458 142 l
	425 101 384 37 316 37 c
	256 37 189 84 173 257 c
	335 257 l
	cp
	500 0 m
	}
ct_PSBuildGlyph
} def
end
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{
								MultipleDataSources NComponents AGMIMG_&colorimage
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and
		Name()ne and
		Name(All)ne and
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys
								}{
								currentoverprint not
									{
 									gsave
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint
					MappedCSA 0 get/DeviceCMYK eq and
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata
						}ifelse
 					}ifelse
				}
				{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys
							}{
							currentoverprint not
								{
	 							gsave
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{
			currentcmykcolor
			/AGMIMG_k xdf
			/AGMIMG_y xdf
			/AGMIMG_m xdf
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor
			}{
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if
						}
					]
					255
					{
						255 div
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for
			put	setcolorspace
		}if
		currentdict
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get
			255 exch sub
			2 index
			3 1 roll
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage
		end
	}def
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf
					Adobe_AGM_Image/AGMIMG_y xddf
					Adobe_AGM_Image/AGMIMG_m xddf
					Adobe_AGM_Image/AGMIMG_c xddf
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf
				Adobe_AGM_Image/AGMIMG_y xddf
				Adobe_AGM_Image/AGMIMG_m xddf
				Adobe_AGM_Image/AGMIMG_c xddf
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 48042 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='ï»¿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 9.1-c001 79.675d0f7, 2023/06/11-19:21:16        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2024-10-20T20:30:18Z"
   xmp:CreatorTool="diagrams.net"
   xmp:ModifyDate="2024-10-20T20:30:18Z"
   pdf:Producer="pdf-lib (https://github.com/Hopding/pdf-lib)"
   dc:format="application/pdf">
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">%3Cmxfile%20host%3D%22Electron%22%20agent%3D%22Mozilla%2F5.0%20\(Macintosh%3B%20Intel%20Mac%20OS%20X%2010_15_7\)%20AppleWebKit%2F537.36%20\(KHTML%2C%20like%20Gecko\)%20draw.io%2F24.7.17%20Chrome%2F128.0.6613.36%20Electron%2F32.0.1%20Safari%2F537.36%22%20version%3D%2224.7.17%22%3E%0A%20%20%3Cdiagram%20name%3D%22Page-1%22%20id%3D%22KnoR8vv7eEnAkcSHi9Or%22%3E%0A%20%20%20%20%3CmxGraphModel%20dx%3D%22955%22%20dy%3D%22662%22%20grid%3D%220%22%20gridSize%3D%2210%22%20guides%3D%221%22%20tooltips%3D%221%22%20connect%3D%221%22%20arrows%3D%221%22%20fold%3D%221%22%20page%3D%221%22%20pageScale%3D%221%22%20pageWidth%3D%221100%22%20pageHeight%3D%22850%22%20background%3D%22none%22%20math%3D%220%22%20shadow%3D%220%22%3E%0A%20%20%20%20%20%20%3Croot%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%220%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%221%22%20parent%3D%220%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%222%22%20value%3D%22%22%20style%3D%22rounded%3D0%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3Bdashed%3D1%3BdashPattern%3D12%2012%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%22559.5%22%20y%3D%222%22%20width%3D%22193.5%22%20height%3D%22110%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%223%22%20style%3D%22edgeStyle%3DorthogonalEdgeStyle%3Brounded%3D0%3BorthogonalLoop%3D1%3BjettySize%3Dauto%3Bhtml%3D1%3BstrokeWidth%3D3%3B%22%20edge%3D%221%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22586.1428571428571%22%20y%3D%22174%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22540.9999999999998%22%20y%3D%22174%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%224%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2018px%3B%26quot%3B%26gt%3BPhase%20Linking%26lt%3B%2Ffont%26gt%3B%26lt%3Bdiv%26gt%3B%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2018px%3B%26quot%3B%26gt%3B%26lt%3Bbr%26gt%3B%26lt%3B%2Ffont%26gt%3B%26lt%3B%2Fdiv%26gt%3B%26lt%3Bdiv%26gt%3B%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2018px%3B%26quot%3B%26gt%3B%26lt%3Bbr%26gt%3B%26lt%3B%2Ffont%26gt%3B%26lt%3B%2Fdiv%26gt%3B%26lt%3Bdiv%26gt%3B%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2018px%3B%26quot%3B%26gt%3B%26lt%3Bbr%26gt%3B%26lt%3B%2Ffont%26gt%3B%26lt%3B%2Fdiv%26gt%3B%26lt%3Bdiv%26gt%3B%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2018px%3B%26quot%3B%26gt%3B%26lt%3Bbr%26gt%3B%26lt%3B%2Ffont%26gt%3B%26lt%3B%2Fdiv%26gt%3B%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%22261%22%20y%3D%22156%22%20width%3D%22280%22%20height%3D%22117%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%225%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3BSHP%20Selection%26lt%3B%2Ffont%26gt%3B%26lt%3Bdiv%26gt%3B%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3B\(optional\)%26lt%3B%2Ffont%26gt%3B%26lt%3B%2Fdiv%26gt%3B%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3BfillColor%3D%23f5f5f5%3BfontColor%3D%23333333%3BstrokeColor%3D%23666666%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%22270%22%20y%3D%22188%22%20width%3D%22120%22%20height%3D%2270%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%226%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3BCoherence%20matrix%20optimization%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%22410%22%20y%3D%22188%22%20width%3D%22115%22%20height%3D%2270%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%227%22%20style%3D%22edgeStyle%3DorthogonalEdgeStyle%3Brounded%3D0%3BorthogonalLoop%3D1%3BjettySize%3Dauto%3Bhtml%3D1%3BstrokeWidth%3D3%3B%22%20edge%3D%221%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22504.51724137931046%22%20y%3D%22355.5%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22566%22%20y%3D%22355.51724137931046%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%228%22%20style%3D%22edgeStyle%3DorthogonalEdgeStyle%3Brounded%3D0%3BorthogonalLoop%3D1%3BjettySize%3Dauto%3Bhtml%3D1%3BexitX%3D0%3BexitY%3D0.5%3BexitDx%3D0%3BexitDy%3D0%3BstrokeWidth%3D3%3B%22%20edge%3D%221%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22236.48275862068976%22%20y%3D%22370.2068965517242%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22299%22%20y%3D%22370.5%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%229%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2018px%3B%26quot%3B%26gt%3BTimeseries%20Processing%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3BlabelBorderColor%3Dnone%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%22299%22%20y%3D%22297%22%20width%3D%22211%22%20height%3D%22135%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2210%22%20value%3D%22-%22%20style%3D%22group%22%20vertex%3D%221%22%20connectable%3D%220%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%22587%22%20y%3D%22117%22%20width%3D%22180%22%20height%3D%22120%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2211%22%20style%3D%22edgeStyle%3DorthogonalEdgeStyle%3Brounded%3D0%3BorthogonalLoop%3D1%3BjettySize%3Dauto%3Bhtml%3D1%3BstrokeWidth%3D3%3B%22%20edge%3D%221%22%20parent%3D%2210%22%20source%3D%2212%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22163.8965517241379%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2212%22%20value%3D%22%26lt%3Bdiv%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3BInterferograms%26lt%3B%2Fdiv%26gt%3B%26lt%3Bdiv%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3B%26lt%3Bbr%26gt%3B%26lt%3B%2Fdiv%26gt%3B%26lt%3Bdiv%26gt%3B%26lt%3Bbr%26gt%3B%26lt%3B%2Fdiv%26gt%3B%22%20style%3D%22html%3D1%3BwhiteSpace%3Dwrap%3Bshape%3DisoCube2%3BbackgroundOutline%3D1%3BisoAngle%3D15%3B%22%20vertex%3D%221%22%20parent%3D%2210%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%22180%22%20height%3D%22120%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2213%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0%3BexitY%3D0%3BexitDx%3D0%3BexitDy%3D43.21417663442088%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2210%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20y%3D%2249.21417663442094%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%2293%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2214%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0%3BexitY%3D0%3BexitDx%3D0%3BexitDy%3D43.21417663442088%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2210%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20y%3D%2258.21417663442094%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22102%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2215%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0%3BexitY%3D0%3BexitDx%3D0%3BexitDy%3D43.21417663442088%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2210%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20y%3D%2267.21417663442094%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22111%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2216%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3B%22%20edge%3D%221%22%20parent%3D%2210%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22180%22%20y%3D%2269%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22110.79000000000002%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2217%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3B%22%20edge%3D%221%22%20parent%3D%2210%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22180%22%20y%3D%2260%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22101.79000000000002%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2218%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3B%22%20edge%3D%221%22%20parent%3D%2210%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22179%22%20y%3D%2251%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%2292.79000000000002%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2219%22%20value%3D%22%22%20style%3D%22group%22%20vertex%3D%221%22%20connectable%3D%220%22%20parent%3D%2210%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%22180%22%20height%3D%22120%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2220%22%20value%3D%22%26lt%3Bdiv%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3BInterferograms%26lt%3B%2Fdiv%26gt%3B%26lt%3Bdiv%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3B%26lt%3Bbr%26gt%3B%26lt%3B%2Fdiv%26gt%3B%26lt%3Bdiv%26gt%3B%26lt%3Bbr%26gt%3B%26lt%3B%2Fdiv%26gt%3B%22%20style%3D%22html%3D1%3BwhiteSpace%3Dwrap%3Bshape%3DisoCube2%3BbackgroundOutline%3D1%3BisoAngle%3D15%3B%22%20vertex%3D%221%22%20parent%3D%2219%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%22180%22%20height%3D%22120%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2221%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0%3BexitY%3D0%3BexitDx%3D0%3BexitDy%3D43.21417663442088%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2219%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20y%3D%2250.21417663442094%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%2294%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2222%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0%3BexitY%3D0%3BexitDx%3D0%3BexitDy%3D43.21417663442088%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2219%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20y%3D%2258.21417663442094%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22102%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2223%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0%3BexitY%3D0%3BexitDx%3D0%3BexitDy%3D43.21417663442088%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2219%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20y%3D%2267.21417663442094%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22111%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2224%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3B%22%20edge%3D%221%22%20parent%3D%2219%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22180%22%20y%3D%2269%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22110.79000000000002%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2225%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3B%22%20edge%3D%221%22%20parent%3D%2219%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22180%22%20y%3D%2260%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22101.79000000000002%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2226%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0.999%3BexitY%3D0.43%3BexitDx%3D0%3BexitDy%3D0%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2219%22%20source%3D%2220%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22179%22%20y%3D%2252%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%2293.79000000000002%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2227%22%20value%3D%22-%22%20style%3D%22group%22%20vertex%3D%221%22%20connectable%3D%220%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%22569%22%20y%3D%229%22%20width%3D%2255.5%22%20height%3D%2237%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2228%22%20value%3D%22%22%20style%3D%22html%3D1%3BwhiteSpace%3Dwrap%3Bshape%3DisoCube2%3BbackgroundOutline%3D1%3BisoAngle%3D15%3B%22%20vertex%3D%221%22%20parent%3D%2227%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2255.5%22%20height%3D%2237%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2229%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0%3BexitY%3D0%3BexitDx%3D0%3BexitDy%3D43.21417663442088%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2227%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20y%3D%2215.174371128946454%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2227.75%22%20y%3D%2228.674999999999997%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2230%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0%3BexitY%3D0%3BexitDx%3D0%3BexitDy%3D43.21417663442088%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2227%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20y%3D%2217.949371128946453%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2227.75%22%20y%3D%2231.450000000000003%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2231%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0%3BexitY%3D0%3BexitDx%3D0%3BexitDy%3D43.21417663442088%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2227%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20y%3D%2220.724371128946455%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2227.75%22%20y%3D%2234.224999999999994%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2232%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3B%22%20edge%3D%221%22%20parent%3D%2227%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2255.5%22%20y%3D%2221.275%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2227.75%22%20y%3D%2234.16025000000001%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2233%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3B%22%20edge%3D%221%22%20parent%3D%2227%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2255.5%22%20y%3D%2218.5%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2227.75%22%20y%3D%2231.385250000000006%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2234%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3B%22%20edge%3D%221%22%20parent%3D%2227%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2255.19166666666666%22%20y%3D%2215.725000000000001%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2227.75%22%20y%3D%2228.61025000000001%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2235%22%20value%3D%22%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%22574.75%22%20y%3D%2269%22%20width%3D%2234.25%22%20height%3D%2218%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2236%22%20value%3D%22Dataset%22%20style%3D%22text%3Bhtml%3D1%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3Bresizable%3D0%3Bpoints%3D%5B%5D%3Bautosize%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%22638%22%20y%3D%2213%22%20width%3D%2259%22%20height%3D%2226%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2237%22%20value%3D%22Processing%20\(sub\)module%22%20style%3D%22text%3Bhtml%3D1%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3Bresizable%3D0%3Bpoints%3D%5B%5D%3Bautosize%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%22610.5%22%20y%3D%2268%22%20width%3D%22147%22%20height%3D%2226%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2238%22%20style%3D%22edgeStyle%3DorthogonalEdgeStyle%3Brounded%3D0%3BorthogonalLoop%3D1%3BjettySize%3Dauto%3Bhtml%3D1%3BexitX%3D1%3BexitY%3D0.5%3BexitDx%3D0%3BexitDy%3D0%3BexitPerimeter%3D0%3BstrokeWidth%3D3%3B%22%20edge%3D%221%22%20source%3D%2267%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22260%22%20y%3D%22157%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2239%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3BNetwork%20Inversion%26lt%3B%2Ffont%26gt%3B%26lt%3Bdiv%26gt%3B%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3B\(if%20necessary\)%26lt%3B%2Ffont%26gt%3B%26lt%3B%2Fdiv%26gt%3B%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3BfillColor%3D%23f5f5f5%3BfontColor%3D%23333333%3BstrokeColor%3D%23666666%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%22334%22%20y%3D%22300%22%20width%3D%22141%22%20height%3D%2251%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2240%22%20value%3D%22%22%20style%3D%22group%22%20vertex%3D%221%22%20connectable%3D%220%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%22568%22%20y%3D%22284%22%20width%3D%22250%22%20height%3D%22149%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2241%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2018px%3B%26quot%3B%26gt%3B%26amp%3Bnbsp%3B%20Unwrapping%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3Balign%3Dleft%3B%22%20vertex%3D%221%22%20parent%3D%2240%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%22250%22%20height%3D%22149%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2242%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3BPre-processing%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3BfillColor%3D%23f5f5f5%3BfontColor%3D%23333333%3BstrokeColor%3D%23666666%3B%22%20vertex%3D%221%22%20parent%3D%2240%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%2294%22%20y%3D%2210%22%20width%3D%22148%22%20height%3D%2227%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2243%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3BPost-processing%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3BfillColor%3D%23f5f5f5%3BfontColor%3D%23333333%3BstrokeColor%3D%23666666%3B%22%20vertex%3D%221%22%20parent%3D%2240%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%2296.5%22%20y%3D%22108%22%20width%3D%22143%22%20height%3D%2228%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2244%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3B2D%20%2F%203D%20unwrapping%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3B%22%20vertex%3D%221%22%20parent%3D%2240%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%22118%22%20y%3D%2248%22%20width%3D%22100%22%20height%3D%2253%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2245%22%20value%3D%22%26lt%3Bdiv%26gt%3B%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3BEstimate%20average%20velocity%26lt%3B%2Ffont%26gt%3B%26lt%3B%2Fdiv%26gt%3B%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%22336%22%20y%3D%22384%22%20width%3D%22137%22%20height%3D%2237%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2246%22%20value%3D%22-%22%20style%3D%22group%22%20vertex%3D%221%22%20connectable%3D%220%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%2263%22%20y%3D%22357%22%20width%3D%22164%22%20height%3D%2286%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2247%22%20value%3D%22%26lt%3Bdiv%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3BAverage%20Velocity%26lt%3B%2Fdiv%26gt%3B%26lt%3Bdiv%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3B%26lt%3Bbr%26gt%3B%26lt%3B%2Fdiv%26gt%3B%22%20style%3D%22html%3D1%3BwhiteSpace%3Dwrap%3Bshape%3DisoCube2%3BbackgroundOutline%3D1%3BisoAngle%3D15%3B%22%20vertex%3D%221%22%20parent%3D%2246%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%22163.09%22%20height%3D%2286%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2248%22%20value%3D%22-%22%20style%3D%22group%22%20vertex%3D%221%22%20connectable%3D%220%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%2250%22%20y%3D%22253%22%20width%3D%22180%22%20height%3D%22120%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2249%22%20value%3D%22%26lt%3Bdiv%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3BDisplacement%20Timeseries%26lt%3B%2Fdiv%26gt%3B%26lt%3Bdiv%26gt%3B%26lt%3Bbr%26gt%3B%26lt%3B%2Fdiv%26gt%3B%26lt%3Bdiv%26gt%3B%26lt%3Bbr%26gt%3B%26lt%3B%2Fdiv%26gt%3B%22%20style%3D%22html%3D1%3BwhiteSpace%3Dwrap%3Bshape%3DisoCube2%3BbackgroundOutline%3D1%3BisoAngle%3D15%3B%22%20vertex%3D%221%22%20parent%3D%2248%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%22180%22%20height%3D%22120%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2250%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0%3BexitY%3D0%3BexitDx%3D0%3BexitDy%3D43.21417663442088%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2248%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20y%3D%2249.21417663442094%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%2293%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2251%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0%3BexitY%3D0%3BexitDx%3D0%3BexitDy%3D43.21417663442088%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2248%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20y%3D%2258.21417663442094%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22102%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2252%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0%3BexitY%3D0%3BexitDx%3D0%3BexitDy%3D43.21417663442088%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2248%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20y%3D%2267.21417663442094%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22111%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2253%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3B%22%20edge%3D%221%22%20parent%3D%2248%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22180%22%20y%3D%2269%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22110.79000000000002%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2254%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3B%22%20edge%3D%221%22%20parent%3D%2248%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22180%22%20y%3D%2260%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22101.79000000000002%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2255%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3B%22%20edge%3D%221%22%20parent%3D%2248%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22179%22%20y%3D%2251%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%2292.79000000000002%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2256%22%20value%3D%22%22%20style%3D%22group%22%20vertex%3D%221%22%20connectable%3D%220%22%20parent%3D%2248%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%22180%22%20height%3D%22120%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2257%22%20value%3D%22%26lt%3Bdiv%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3BDisplacement%20Timeseries%26lt%3B%2Fdiv%26gt%3B%26lt%3Bdiv%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3B%26lt%3Bbr%26gt%3B%26lt%3B%2Fdiv%26gt%3B%26lt%3Bdiv%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3B%26lt%3Bbr%26gt%3B%26lt%3B%2Fdiv%26gt%3B%22%20style%3D%22html%3D1%3BwhiteSpace%3Dwrap%3Bshape%3DisoCube2%3BbackgroundOutline%3D1%3BisoAngle%3D15%3B%22%20vertex%3D%221%22%20parent%3D%2256%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%22180%22%20height%3D%22120%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2258%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0%3BexitY%3D0%3BexitDx%3D0%3BexitDy%3D43.21417663442088%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2256%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20y%3D%2250.21417663442094%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%2294%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2259%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0%3BexitY%3D0%3BexitDx%3D0%3BexitDy%3D43.21417663442088%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2256%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20y%3D%2258.21417663442094%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22102%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2260%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0%3BexitY%3D0%3BexitDx%3D0%3BexitDy%3D43.21417663442088%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2256%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20y%3D%2267.21417663442094%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22111%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2261%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3B%22%20edge%3D%221%22%20parent%3D%2256%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22180%22%20y%3D%2269%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22110.79000000000002%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2262%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3B%22%20edge%3D%221%22%20parent%3D%2256%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22180%22%20y%3D%2260%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22101.79000000000002%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2263%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0.999%3BexitY%3D0.43%3BexitDx%3D0%3BexitDy%3D0%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2256%22%20source%3D%2257%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22179%22%20y%3D%2252%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%2293.79000000000002%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2264%22%20value%3D%22Data%20flow%22%20style%3D%22text%3Bhtml%3D1%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3Bresizable%3D0%3Bpoints%3D%5B%5D%3Bautosize%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%22629%22%20y%3D%2243.99999999999999%22%20width%3D%2268%22%20height%3D%2226%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2265%22%20value%3D%22%22%20style%3D%22endArrow%3Dclassic%3Bhtml%3D1%3Brounded%3D0%3BstrokeWidth%3D3%3B%22%20edge%3D%221%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22577.25%22%20y%3D%2258.43%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22606.25%22%20y%3D%2258.43%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2266%22%20value%3D%22%22%20style%3D%22group%22%20vertex%3D%221%22%20connectable%3D%220%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%2240%22%20y%3D%2297%22%20width%3D%22180%22%20height%3D%22120%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2267%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3BCoregistered%20SLCs%26lt%3B%2Ffont%26gt%3B%26lt%3Bdiv%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3B%26lt%3Bbr%26gt%3B%26lt%3B%2Fdiv%26gt%3B%26lt%3Bdiv%26gt%3B%26lt%3Bbr%26gt%3B%26lt%3B%2Fdiv%26gt%3B%22%20style%3D%22html%3D1%3BwhiteSpace%3Dwrap%3Bshape%3DisoCube2%3BbackgroundOutline%3D1%3BisoAngle%3D15%3B%22%20vertex%3D%221%22%20parent%3D%2266%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%22180%22%20height%3D%22120%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2268%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0%3BexitY%3D0%3BexitDx%3D0%3BexitDy%3D43.21417663442088%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2266%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20y%3D%2250.21417663442094%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%2294%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2269%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0%3BexitY%3D0%3BexitDx%3D0%3BexitDy%3D43.21417663442088%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2266%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20y%3D%2258.21417663442094%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22102%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2270%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0%3BexitY%3D0%3BexitDx%3D0%3BexitDy%3D43.21417663442088%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2266%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20y%3D%2267.21417663442094%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22111%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2271%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3B%22%20edge%3D%221%22%20parent%3D%2266%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22180%22%20y%3D%2269%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22110.79000000000002%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2272%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3B%22%20edge%3D%221%22%20parent%3D%2266%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22180%22%20y%3D%2260%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%22101.79000000000002%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2273%22%20value%3D%22%22%20style%3D%22endArrow%3Dnone%3Bhtml%3D1%3Brounded%3D0%3BexitX%3D0.999%3BexitY%3D0.43%3BexitDx%3D0%3BexitDy%3D0%3BexitPerimeter%3D0%3B%22%20edge%3D%221%22%20parent%3D%2266%22%20source%3D%2267%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22179%22%20y%3D%2252%22%20as%3D%22sourcePoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%2290%22%20y%3D%2293.79000000000002%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2274%22%20value%3D%22%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3BfillColor%3D%23f5f5f5%3BfontColor%3D%23333333%3BstrokeColor%3D%23666666%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%22574.62%22%20y%3D%2289%22%20width%3D%2234.25%22%20height%3D%2218%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2275%22%20value%3D%22%26lt%3Bdiv%26gt%3BOptional%20module%26lt%3B%2Fdiv%26gt%3B%22%20style%3D%22text%3Bhtml%3D1%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3Bresizable%3D0%3Bpoints%3D%5B%5D%3Bautosize%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%22629%22%20y%3D%2285.5%22%20width%3D%22105%22%20height%3D%2226%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2276%22%20style%3D%22edgeStyle%3DorthogonalEdgeStyle%3Brounded%3D0%3BorthogonalLoop%3D1%3BjettySize%3Dauto%3Bhtml%3D1%3BexitX%3D1%3BexitY%3D0.5%3BexitDx%3D0%3BexitDy%3D0%3BstrokeWidth%3D2%3BendArrow%3Dnone%3BendFill%3D0%3B%22%20edge%3D%221%22%20source%3D%2277%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20relative%3D%221%22%20as%3D%22geometry%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22580%22%20y%3D%22174%22%20as%3D%22targetPoint%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CArray%20as%3D%22points%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22560%22%20y%3D%22123%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3CmxPoint%20x%3D%22560%22%20y%3D%22174%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2FArray%3E%0A%20%20%20%20%20%20%20%20%20%20%3C%2FmxGeometry%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%20%20%3CmxCell%20id%3D%2277%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2016px%3B%26quot%3B%26gt%3BPS%20Selection%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3CmxGeometry%20x%3D%22263%22%20y%3D%2294%22%20width%3D%22275%22%20height%3D%2257%22%20as%3D%22geometry%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3C%2FmxCell%3E%0A%20%20%20%20%20%20%3C%2Froot%3E%0A%20%20%20%20%3C%2FmxGraphModel%3E%0A%20%20%3C%2Fdiagram%3E%0A%3C%2Fmxfile%3E%0A</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">dolphin-modules.drawio.pdf</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
















<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
<</PageSize [562.08 318.96 ] >> setpagedevice
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -318.96 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 318.96 li
562.08 318.96 li
562.08 0 li
cp
clp
gsave
0 0 mo
561.598 0 li
561.598 318.961 li
0 318.961 li
cp
eclp
0 0 mo
561.75 0 li
561.75 318.75 li
0 318.75 li
cp
false sop
/0
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
grestore
gsave
18.75 10.5 mo
543 10.5 li
543 309 li
18.75 309 li
cp
eclp
368.101 11.9197 mo
497.693 11.9197 li
497.693 85.5896 li
368.101 85.5896 li
cp
false sop
0 0 0 0 cmyk
f
384.174 11.5849 mo
392.211 11.5849 li
392.211 12.2546 li
384.174 12.2546 li
384.174 11.5849 li
cp
400.248 11.5849 mo
408.285 11.5849 li
408.285 12.2546 li
400.248 12.2546 li
400.248 11.5849 li
cp
416.321 11.5849 mo
424.358 11.5849 li
424.358 12.2546 li
416.321 12.2546 li
416.321 11.5849 li
cp
432.395 11.5849 mo
440.431 11.5849 li
440.431 12.2546 li
432.395 12.2546 li
432.395 11.5849 li
cp
448.468 11.5849 mo
456.505 11.5849 li
456.505 12.2546 li
448.468 12.2546 li
448.468 11.5849 li
cp
464.542 11.5849 mo
472.578 11.5849 li
472.578 12.2546 li
464.542 12.2546 li
464.542 11.5849 li
cp
480.615 11.5849 mo
488.652 11.5849 li
488.652 12.2546 li
480.615 12.2546 li
480.615 11.5849 li
cp
496.688 11.5849 mo
498.028 11.5849 li
498.028 18.9518 li
497.358 18.9518 li
497.358 11.9197 li
497.693 11.9197 li
497.693 12.2546 li
496.688 12.2546 li
496.688 11.5849 li
cp
498.028 26.9886 mo
498.028 35.0253 li
497.358 35.0253 li
497.358 26.9886 li
498.028 26.9886 li
cp
498.028 43.062 mo
498.028 51.0987 li
497.358 51.0987 li
497.358 43.062 li
498.028 43.062 li
cp
498.028 59.1354 mo
498.028 67.1721 li
497.358 67.1721 li
497.358 59.1354 li
498.028 59.1354 li
cp
498.028 75.2088 mo
498.028 83.2455 li
497.358 83.2455 li
497.358 75.2088 li
498.028 75.2088 li
cp
492 85.9244 mo
483.964 85.9244 li
483.964 85.2547 li
492 85.2547 li
492 85.9244 li
cp
475.927 85.9244 mo
467.89 85.9244 li
467.89 85.2547 li
475.927 85.2547 li
475.927 85.9244 li
cp
459.853 85.9244 mo
451.817 85.9244 li
451.817 85.2547 li
459.853 85.2547 li
459.853 85.9244 li
cp
443.78 85.9244 mo
435.743 85.9244 li
435.743 85.2547 li
443.78 85.2547 li
443.78 85.9244 li
cp
427.707 85.9244 mo
419.67 85.9244 li
419.67 85.2547 li
427.707 85.2547 li
427.707 85.9244 li
cp
411.633 85.9244 mo
403.596 85.9244 li
403.596 85.2547 li
411.633 85.2547 li
411.633 85.9244 li
cp
395.56 85.9244 mo
387.523 85.9244 li
387.523 85.2547 li
395.56 85.2547 li
395.56 85.9244 li
cp
379.486 85.9244 mo
371.45 85.9244 li
371.45 85.2547 li
379.486 85.2547 li
379.486 85.9244 li
cp
367.766 80.9015 mo
367.766 72.8648 li
368.436 72.8648 li
368.436 80.9015 li
367.766 80.9015 li
cp
367.766 64.8281 mo
367.766 56.7914 li
368.436 56.7914 li
368.436 64.8281 li
367.766 64.8281 li
cp
367.766 48.7547 mo
367.766 40.7179 li
368.436 40.7179 li
368.436 48.7547 li
367.766 48.7547 li
cp
367.766 32.6812 mo
367.766 24.6445 li
368.436 24.6445 li
368.436 32.6812 li
367.766 32.6812 li
cp
367.766 16.6078 mo
367.766 11.5849 li
376.138 11.5849 li
376.138 12.2546 li
368.101 12.2546 li
368.101 11.9197 li
368.436 11.9197 li
368.436 16.6078 li
367.766 16.6078 li
cp
.749722 .679194 .670497 .901457 cmyk
f
2.00918 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
355.711 127.113 mo
379.178 127.113 li
@
383.699 127.113 mo
377.671 130.126 li
379.178 127.113 li
377.671 124.099 li
383.699 127.113 li
cp
f
383.699 127.113 mo
377.671 130.126 li
379.178 127.113 li
377.671 124.099 li
383.699 127.113 li
cp
@
179.941 115.058 mo
343.957 115.058 li
344.729 115.058 345.493 115.133 346.25 115.283 cv
347.007 115.434 347.742 115.657 348.455 115.952 cv
349.168 116.248 349.846 116.61 350.487 117.038 cv
351.129 117.467 351.723 117.954 352.268 118.5 cv
352.814 119.046 353.301 119.639 353.73 120.281 cv
354.159 120.923 354.521 121.6 354.816 122.313 cv
355.112 123.026 355.335 123.761 355.485 124.518 cv
355.636 125.275 355.711 126.039 355.711 126.811 cv
355.711 181.662 li
355.711 182.434 355.636 183.198 355.485 183.955 cv
355.335 184.712 355.112 185.447 354.816 186.16 cv
354.521 186.873 354.159 187.55 353.73 188.192 cv
353.301 188.833 352.814 189.427 352.268 189.973 cv
351.723 190.519 351.129 191.006 350.487 191.435 cv
349.846 191.863 349.168 192.225 348.455 192.521 cv
347.742 192.816 347.007 193.039 346.25 193.19 cv
345.493 193.34 344.729 193.415 343.957 193.415 cv
179.941 193.415 li
179.17 193.415 178.405 193.34 177.648 193.19 cv
176.891 193.039 176.157 192.816 175.443 192.521 cv
174.73 192.225 174.053 191.863 173.411 191.435 cv
172.77 191.006 172.176 190.519 171.63 189.973 cv
171.085 189.427 170.597 188.833 170.169 188.192 cv
169.74 187.55 169.378 186.873 169.082 186.16 cv
168.787 185.447 168.564 184.712 168.414 183.955 cv
168.263 183.198 168.188 182.434 168.188 181.662 cv
168.188 126.811 li
168.188 126.039 168.263 125.275 168.414 124.518 cv
168.564 123.761 168.787 123.026 169.082 122.313 cv
169.378 121.6 169.74 120.923 170.169 120.281 cv
170.597 119.639 171.085 119.046 171.63 118.5 cv
172.176 117.954 172.77 117.467 173.411 117.038 cv
174.053 116.61 174.73 116.248 175.443 115.952 cv
176.157 115.657 176.891 115.434 177.648 115.283 cv
178.405 115.133 179.17 115.058 179.941 115.058 cv
cp
0 0 0 0 cmyk
f
.669726 lw
4 ml
179.941 115.058 mo
343.957 115.058 li
344.729 115.058 345.493 115.133 346.25 115.283 cv
347.007 115.434 347.742 115.657 348.455 115.952 cv
349.168 116.248 349.846 116.61 350.487 117.038 cv
351.129 117.467 351.723 117.954 352.268 118.5 cv
352.814 119.046 353.301 119.639 353.73 120.281 cv
354.159 120.923 354.521 121.6 354.816 122.313 cv
355.112 123.026 355.335 123.761 355.485 124.518 cv
355.636 125.275 355.711 126.039 355.711 126.811 cv
355.711 181.662 li
355.711 182.434 355.636 183.198 355.485 183.955 cv
355.335 184.712 355.112 185.447 354.816 186.16 cv
354.521 186.873 354.159 187.55 353.73 188.192 cv
353.301 188.833 352.814 189.427 352.268 189.973 cv
351.723 190.519 351.129 191.006 350.487 191.435 cv
349.846 191.863 349.168 192.225 348.455 192.521 cv
347.742 192.816 347.007 193.039 346.25 193.19 cv
345.493 193.34 344.729 193.415 343.957 193.415 cv
179.941 193.415 li
179.17 193.415 178.405 193.34 177.648 193.19 cv
176.891 193.039 176.157 192.816 175.443 192.521 cv
174.73 192.225 174.053 191.863 173.411 191.435 cv
172.77 191.006 172.176 190.519 171.63 189.973 cv
171.085 189.427 170.597 188.833 170.169 188.192 cv
169.74 187.55 169.378 186.873 169.082 186.16 cv
168.787 185.447 168.564 184.712 168.414 183.955 cv
168.263 183.198 168.188 182.434 168.188 181.662 cv
168.188 126.811 li
168.188 126.039 168.263 125.275 168.414 124.518 cv
168.564 123.761 168.787 123.026 169.082 122.313 cv
169.378 121.6 169.74 120.923 170.169 120.281 cv
170.597 119.639 171.085 119.046 171.63 118.5 cv
172.176 117.954 172.77 117.467 173.411 117.038 cv
174.053 116.61 174.73 116.248 175.443 115.952 cv
176.157 115.657 176.891 115.434 177.648 115.283 cv
178.405 115.133 179.17 115.058 179.941 115.058 cv
cp
.749722 .679194 .670497 .901457 cmyk
@
%ADOBeginSubsetFont: GAAAAA+Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /GAAAAA+Helvetica
Type42DictBegin
[<00010000000c000c000c000c4f532f329504f9ec000000cc000000606376
7420982241db0000012c0000038c6670676d52c5ad27000004b800000b90
676c7966a30321a700001964000010ca68656164a14707f4000010480000
0036686865610a2207c50000108000000024686d747859fe0788000010a4
000002b46c6f63619e63a4b9000013580000015c6d61787009210c7d0000
14b4000000206e616d65015005b2000014d40000002070726570c412718a
000014f40000046e67646972000000000000000000000000000303880190
00050000059905330000011e05990533000003d000660200000000000000
000000000000000000030000000000000000000000007079727300400020
00a00600fea4003d079a01cd2000019f4f010000042f05bd000000200000
05c0001005bd00280580001a042f001f0000ffd90000ffda0000ffd9fe55
ffe605c70010fe6dfff1033b000000b9000000b902fe3f3c00c0008d009b
00af000600a800c00028005e009800c9016a00b9015c00b400d6011e002e
0080000400b8004c00cc01ffffd1006600a400af007400c2009500b1000c
0028006d0015004c008e0125ff7a000c0040004c00620084ffa200240038
008600bd0039005e008e00edffa9ffb300400052005500aa00ab00c200cb
012302b10413ffaeffe4000800510074008400aa00d1ff4cffaf0012002c
004200500051008400be012503daff680018003b0098009c009f00a100c1
00ec018201b4ff68ff76ffd0ffe100020018001c00530053007d01b401e1
03af0486ff9cffeafffe001f0028002a00520060009300a300aa00af00af
00c001000145016b0174019301950240028202b404850517fefd00060029
004700470048006f008800b400b900c400f200f901ef02180310037403c5
ff35fff3000b004b004c0052005500650076007600870087008e00ab00bb
0106013001430150017d0194019501d3022a025502580277027802e6034e
035c037903d3047304b2058c0598060bfef5ffbbffc7ffd50017001d005b
0072007e009c00c200d000f400fa01030106011c0125013b0142015e015e
0180019b02b901a101b9025001c001d002aa01df01e301ef01fb0205020c
0215022b0274029302ab02c202ce03690395039903df03f5043e050205a1
05e5062507dbfe62fe89feceff3bffe1fff800030008002100390042004e
005f0061006f00700034007f008e00ad00ad00af00bd00c400c500c900c9
00c900e3011c00ed00f800f901000112011a0132014d014d014e014f0166
0169019e01ba01ba01be01e301ef01f602000200020902110217021c0253
0262026d028002d50280031b032a034a035a03af03af03c803d603fb03fb
04050413041504470449008c046d049a049a04a604a804b204cf0539053e
054e055605800589058c036305d105d6067e068e06b206ef06f00728074c
076f078c00b400c900c000c10000000000000000000000000004012400af
0032006e0063014401620096014301a10161008a00740064018801ef0170
0028ff5d037e0347023000aa00be007b0062009a007d0089035c00a1ffd8
03aa00d70093006c0000008000a70442001d0597001d00820030002a002a
002a002a002a002a0093007600a000ac00b800ab00c50000002bfe55001a
042f002105be002740292a292827262524232221201f1e1d1c1b1a191817
161514131211100d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b09051582320b00d44235921212d2c20204518684420b001602045b046
76688a4560442d2c01b9400000000a2d2c00b9000040000b2d2c2045b000
43617d6818b0004360442d2c45b01a234445b01923442d2c2045b0032545
6164b050515845441b2121592d2c20b0032552582359212d2c69b04061b0
008b0c6423648bb8400062600c642364615c58b0036159b002602d2c45b0
112bb0172344b0177ae5182d2c45b0112bb01723442d2c45b0112bb01745
8cb0172344b0177ae5182d2cb002254661658a46b040608b482d2cb00225
46608a46b040618c482d2c4b53205c58b002855958b00185592d2c20b003
2545b019236a4445b01a23444565234520b00325606a20b009234223688a
6a606120b0005258b21a401a4523614459b0005058b21940194523614459
2d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b2d2cb93b21e7
830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c456920b00943b0022660b00325b00525
4961b0805358b21940194523616844b21a401a4523606a44b209191a4565
2345604259b00943608a103a2d2c01b005251023208af500b0016023edec
2d2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d
2c20b001600110203c003c2d2c20b001610110203c003c2d2c764520b003
254523616818236860442d2c7645b00325452361682318456860442d2c76
45b0032545616823452361442d2c4569b014b0324b505821b0205961442d
b8002b2c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db8002c2c2020456944b001602db8002d2cb8002c2a212db8002e2c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db8002f2c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db800302c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db800312c2020456944
b001602020457d691844b001602db800322cb800312a2db800332c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db800342c4b535845441b2121592db800352c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800362c20
20456944b001602db800372cb800362a212db800382c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800392c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db8003a2c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db8003b2c2020456944b00160202045
7d691844b001602db8003c2cb8003b2a2db8003d2c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db8003e2c4b535845441b2121592db8003f2c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db800402c2020456944b001
602db800412cb800402a212db800422c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db800432c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db800442c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db800452c2020456944b001602020457d691844b001
602db800462cb800452a2db800472c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
482c4b535845441b2121592db800492c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db8004a2c2020456944b001602db8004b2c
b8004a2a212db8004c2c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db8004d2c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db8004e2c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db8004f2c2020456944b001602020457d691844b001602db800502c
b8004f2a2db800512c4b20b003265358b0801bb040598a8a20b003265358
2321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b003
2653582321b801408a8a1b8a235920b80003265358b0032545b801805058
2321b8018023211bb003254523212321591b2159442db800522c4b535845
441b2121592db800532c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db800542c2020456944b001602db800552cb800542a212d
b800562c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db800572c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800582c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80059
2c2020456944b001602020457d691844b001602db8005a2cb800592a2db8
005b2c4b20b003265358b0401bb000598a8a20b0032653582321b0808a8a
1b8a235920b0032653582321b800c08a8a1b8a235920b0032653582321b8
01008a8a1b8a235920b0032653582321b801408a8a1b8a235920b8000326
5358b0032545b8018050582321b8018023211bb003254523212321591b21
59442db8005c2c4b535845441b2121592db8005d2c4bb800095058b10101
8e59b801ff85b800441db9000900035f5e2db8005e2c2020456944b00160
2db8005f2cb8005e2a212db800602c2046b003254652582359208a208a49
648a204620686164b004254620686164525823658a592f20b00053586920
b000545821b040591b6920b000545821b0406559593a2db800612c2046b0
0425465258238a592046206a6164b0042546206a61645258238a592ffd2d
b800622c4b20b0032650585158b080441bb04044591b21212045b0c05058
b0c0441b2159592db800632c2020456944b001602020457d691844b00160
2db800642cb800632a2db800652c4b20b003265358b0401bb000598a8a20
b0032653582321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a
235920b0032653582321b801008a8a1b8a235920b0032653582321b80140
8a8a1b8a235920b80003265358b0032545b8018050582321b8018023211b
b003254523212321591b2159442db800662c4b535845441b2121592d0001
000000000000a61dd4625f0f3cf500110800000000005f4d8f0000000000
dee02ed6f865fc270b9108f9000000090001000000000000000100000629
fe2900000c01f865fced0b910001000000000000000000000000000000ad
051200420000000000000000023900000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000473009c000000000000000000000000055600af0000
0000000000000000000004e3002105c700aa000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000004730052000000000400003b0000000004730048000000000473003d
0473008401c7008400000000040000800000000006aa0084047300840473
003b047300760000000002aa008904000042000000000000000000000000
05c700120000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000239
000000000035003500350035003500350035003500350035003500350035
003500350035003500350035003500350035003500350035003500350035
003500350035003500350035003500350035003500350035003500350035
0035003500350035005d005d005d005d00b300b300b300b300e001280128
012801280128012801280128012801280128012801f201f202740274033d
033d03e404330460046004cf04cf054b05a7061f0691069106d707b707b7
07b707b70865086508650865086508650865086508650865086508650865
086508650865086508650865086508650865086508650865086508650865
086508650865086508650865086508650865086508650865086508650865
086508650865086508650865086508650865086508650865086508650865
086508650865086508650865086508650865086508650865086508650865
08650865086508650865086508650865086508650001000000ad006f0009
006b00070002001000100067000007e80b90000400010000000100120003
000104090002000e00000052006500670075006c00610072b8005d2b01ba
000501b9005f2b01bf01bb003e00340029001d0012000000652bbf01bc00
4200340029001d0012000000652bbf01bd003a00340029001d0012000000
652b00bf01b7004d003d003700280012000000652bbf01b80060004f0037
0028001b000000652bbf01b90047003d0029001d0012000000652bbf01ba
004200340029001d0012000000652b00ba01be000400642bb801b620457d
691844b800532bb800492bb8003f2bb800352bb8002b2b4118008001a600
9001a600a001a600030069018b0079018b0089018b0099018b0004008901
8b0099018b00a9018b00b9018bb2040840ba0179001a014a400b041f5414
191f180a0b1fd2b80106b49e1fd918e3bb0119000d00e10119b20d000941
0a01a0019f0064001f01a50025017a00480028019ab3296c1f60410a01a9
007001a9008001a90003008001a9000101a9b21e321fbe012c0025040100
1f0126001e0401b61fe7312d1fe531b80201b21fc227b80401b21fc11eb8
0201400f1fc01d9e1fbf1d671fbe1d671fab27b80401b21faa29b80401b6
1fa91d6c1f931eb8019ab21f921db80101b21f911db80101b21f751db802
01b61f6d29961f6431b8019ab21f4c96b802abb21f391db80156400b1f36
38211f351de41f2f27b80801400b1f2d1d4c1f2a31cd1f241db802abb21f
201eb8012540111f1c1d931f3a1d4c1f1e1d45273a1d4527bb01aa019b00
2a019bb2254a1fba019b0025017ab349293896b8017bb348283125b8017a
403648289629482725294c1f252946272729482756c80784075b07410732
072b072807260721071b071408120810080e080c080a08080807b801acb2
3f1f06bb01ab003f001f01abb308060805b801aeb23f1f04bb01ad003f00
1f01adb70804080208000814b8ffe0b40000010014b801abb41000000100
b801abb606100000010006b801adb300000100b801ad401f040000010004
10000001001002000001000200000001000002010802004a00b0018db806
008516763f183f123e113946443e113946443e113946443e113946443e11
3946443e11394660443e11394660443e11394660442b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa1d59
b0324b5358b0ff1d592b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b65422b2b
4b5279b376706a66456523456023456560234560b08b766818b080622020
b16a704565234520b003266062636820b003266165b070236544b06a2344
20b176664565234520b003266062636820b003266165b066236544b07623
44b10066455458b166406544b27640764523614459b36242725d45652345
6023456560234560b089766818b080622020b172424565234520b0032660
62636820b003266165b042236544b072234420b1625d4565234520b00326
6062636820b003266165b05d236544b0622344b1005d455458b15d406544
b262406245236144592b2b2b2b456953427374b8019a2045694b20b02853
b049515a58b020615944b801a62045694475000000>
[4299 ] AllocGlyphStorage
]def
124 60
PrepFor2015
Type42DictEnd

1 0 3 <> GAAAAA+Helvetica AddT42Char
1 106 47 <0001009c0000044b05bd000500314013000203021e040508031a07010225
0500190607b80153b321765e182b2b4ef43c4dfd3c4e10e6003f3c4dfd3c
3f31301333112115219cc702e8fc5105bdfaf2af>GAAAAA+Helvetica AddT42Char
1 186 51 <000200af000004f805bd000a001400614035690c6912790c7a1204481458
1468147a140407081e1110100a010e0f1e0100020a080206120c04091414
31041a160f092500191516b8010bb3219589182b2b4ef44dfd3c4e10f64d
fd11121739003f3f3cfd3c1012392f3cfd3c015d31305d13213216151406
2321112300272623211121323635af0295c4f0d6defe32c70380784273fe
74018c86a705bdddc8acfffd9304b93a1ffe03729000>GAAAAA+Helvetica AddT42Char
1 592 68 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>GAAAAA+Helvetica AddT42Char
1 1256 72 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc00>GAAAAA+Helvetica AddT42Char
1 1658 74 <0003003dfe3b03e80449001f002d002e00b7404d36144908490958085909
880ca91ba81da927a62bb91b0b4008031622290ec40a221d1f070406291d
190a121d0a0f2e072e2e051c032e162e2d29051a300c0e270d3e26271c19
2f3087217242182b2b4ef44dedf4ed394e10f64dfde4f51112392f003f3f
ed3fed3f3fed10ed1112393931304379402c23281a1e0b1124251026231e
262600281a262600110b0e21000f0e0c0d251d222601271b2926000f0c12
2100002b2b2b01103c103c2b2b2b2b2b818181005d001716173533111407
06212226273316171633323736270e012322241110003300262322070615
1416333237363501027c5e3335a63c70fec9adec0eb70d273d83cf402603
36987daefefb0107ba0144a47fbe4625937cc24f2cfed104423e234387fc
32cc76da9ba548273c9256dd5250f7011d010d012efea1c0b25f9ab5bdaf
6384022d>GAAAAA+Helvetica AddT42Char
1 1992 75 <00010084000003ed05c200160053402c0607070817071708270427137507
750808130d0213150000111d0607150c0a0d290a1a180115290016191718
b80106b3216242182b2b4ef43c4dfd3c4e10f64ded003f3c3fed3f113939
0112393130005d1333113637363332171615112311342726232206151123
84b440335782e9532db91e318770b6b405c2fddc512139a3599efd5102a3
7637589ad6fdc800>GAAAAA+Helvetica AddT42Char
1 2150 76 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
>GAAAAA+Helvetica AddT42Char
1 2240 78 <00010080000003f805bd000b00a740645902013a08011902010706170657
056705790678078705b903c903da030a05050608080709030284029402a4
020302391209090405060504066d12070708080705040305060908050204
030a00000403060a07060a061a0d09020a29000b190c0db22162b9011600
182b2b4ef43c4dfd3c3c194e10e618003f3c3c3f3c3f1112173901121739
874d2e2b087d10c104872e182b5d057d10c010083c083c3130015d00715d
7213331101330901230107112380ad01cee6fe6601b1e6feb297ad05bdfc
ab01c7fe6ffd62021c8afe6e>GAAAAA+Helvetica AddT42Char
1 2710 81 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>GAAAAA+Helvetica AddT42Char
1 3502 86 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>GAAAAA+Helvetica AddT42Char
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb3>GAAAAA+Helvetica AddT42Char
GAAAAA+Helvetica /CharStrings get begin
/space 3 def
/L 47 def
/P 51 def
/a 68 def
/e 72 def
/g 74 def
/h 75 def
/i 76 def
/k 78 def
/n 81 def
/s 86 def
end
GAAAAA+Helvetica /Encoding get
dup 32 /space put
dup 76 /L put
dup 80 /P put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 110 /n put
dup 115 /s put
pop
end
%ADOEndSubsetFont
/RDZVHX+Helvetica /GAAAAA+Helvetica findfont ct_VMDictPut
/RDZVHX+Helvetica*1
[32{/.notdef}rp /space 43{/.notdef}rp /L 3{/.notdef}rp /P 16{/.notdef}rp /a
3{/.notdef}rp /e /.notdef /g /h /i /.notdef /k
2{/.notdef}rp /n 4{/.notdef}rp /s 140{/.notdef}rp]
RDZVHX+Helvetica nf
RDZVHX+Helvetica*1 [12.0551 0 0 -12.0551 0 0 ]msf
223.744 130.126 mo
(Phase Linking)sh
181.247 136.489 mo
247.55 136.489 li
248.012 136.489 248.469 136.534 248.922 136.624 cv
249.375 136.714 249.815 136.847 250.241 137.024 cv
250.668 137.201 251.073 137.417 251.457 137.674 cv
251.841 137.93 252.196 138.222 252.523 138.548 cv
252.849 138.875 253.141 139.23 253.397 139.614 cv
253.654 139.998 253.87 140.403 254.047 140.83 cv
254.224 141.256 254.357 141.696 254.447 142.149 cv
254.537 142.602 254.582 143.059 254.582 143.521 cv
254.582 176.337 li
254.582 176.799 254.537 177.256 254.447 177.709 cv
254.357 178.162 254.224 178.602 254.047 179.028 cv
253.87 179.455 253.654 179.86 253.397 180.244 cv
253.141 180.628 252.849 180.983 252.523 181.31 cv
252.196 181.636 251.841 181.928 251.457 182.184 cv
251.073 182.441 250.668 182.658 250.241 182.834 cv
249.815 183.011 249.375 183.144 248.922 183.234 cv
248.469 183.325 248.012 183.37 247.55 183.37 cv
181.247 183.37 li
180.786 183.37 180.328 183.325 179.875 183.234 cv
179.423 183.144 178.983 183.011 178.556 182.834 cv
178.13 182.658 177.724 182.441 177.341 182.184 cv
176.957 181.928 176.601 181.636 176.275 181.31 cv
175.948 180.983 175.657 180.628 175.4 180.244 cv
175.144 179.86 174.927 179.455 174.751 179.028 cv
174.574 178.602 174.44 178.162 174.35 177.709 cv
174.26 177.256 174.215 176.799 174.215 176.337 cv
174.215 143.521 li
174.215 143.059 174.26 142.602 174.35 142.149 cv
174.44 141.696 174.574 141.256 174.751 140.83 cv
174.927 140.403 175.144 139.998 175.4 139.614 cv
175.657 139.23 175.948 138.875 176.275 138.548 cv
176.601 138.222 176.957 137.93 177.341 137.674 cv
177.724 137.417 178.13 137.201 178.556 137.024 cv
178.983 136.847 179.423 136.714 179.876 136.624 cv
180.328 136.534 180.786 136.489 181.247 136.489 cv
cp
.0274357 .0173037 .0173037 0 cmyk
f
181.247 136.489 mo
247.55 136.489 li
248.012 136.489 248.469 136.534 248.922 136.624 cv
249.375 136.714 249.815 136.847 250.241 137.024 cv
250.668 137.201 251.073 137.417 251.457 137.674 cv
251.841 137.93 252.196 138.222 252.523 138.548 cv
252.849 138.875 253.141 139.23 253.397 139.614 cv
253.654 139.998 253.87 140.403 254.047 140.83 cv
254.224 141.256 254.357 141.696 254.447 142.149 cv
254.537 142.602 254.582 143.059 254.582 143.521 cv
254.582 176.337 li
254.582 176.799 254.537 177.256 254.447 177.709 cv
254.357 178.162 254.224 178.602 254.047 179.028 cv
253.87 179.455 253.654 179.86 253.397 180.244 cv
253.141 180.628 252.849 180.983 252.523 181.31 cv
252.196 181.636 251.841 181.928 251.457 182.184 cv
251.073 182.441 250.668 182.658 250.241 182.834 cv
249.815 183.011 249.375 183.144 248.922 183.234 cv
248.469 183.325 248.012 183.37 247.55 183.37 cv
181.247 183.37 li
180.786 183.37 180.328 183.325 179.875 183.234 cv
179.423 183.144 178.983 183.011 178.556 182.834 cv
178.13 182.658 177.724 182.441 177.341 182.184 cv
176.957 181.928 176.601 181.636 176.275 181.31 cv
175.948 180.983 175.657 180.628 175.4 180.244 cv
175.144 179.86 174.927 179.455 174.751 179.028 cv
174.574 178.602 174.44 178.162 174.35 177.709 cv
174.26 177.256 174.215 176.799 174.215 176.337 cv
174.215 143.521 li
174.215 143.059 174.26 142.602 174.35 142.149 cv
174.44 141.696 174.574 141.256 174.751 140.83 cv
174.927 140.403 175.144 139.998 175.4 139.614 cv
175.657 139.23 175.948 138.875 176.275 138.548 cv
176.601 138.222 176.957 137.93 177.341 137.674 cv
177.724 137.417 178.13 137.201 178.556 137.024 cv
178.983 136.847 179.423 136.714 179.876 136.624 cv
180.328 136.534 180.786 136.489 181.247 136.489 cv
cp
.597711 .511803 .507713 .201297 cmyk
@
.694331 .632349 .621027 .583551 cmyk
%ADOBeginSubsetFont: HAAAAA+Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /HAAAAA+Helvetica
Type42DictBegin
[<00010000000c000c000c000c4f532f329502f9c6000000cc000000606376
7420982241db0000012c0000038c6670676d52c5ad27000004b800000b90
676c7966f0cd0582000017880000210e68656164a14707f4000010480000
0036686865610a2207740000108000000024686d7478aafc0e9a000010a4
000001746c6f6361fafef49700001218000000be6d61787008d20c7d0000
12d8000000206e616d65015005b2000012f80000002070726570c412718a
000013180000046e67646972000000000000000000000000000303880190
00050000059905330000011e05990533000003d000660200000000000000
000000000000000000010000000000000000000000007079727300400020
007a0600fea4003d079a01cd2000019f4f010000042f05bd000000200000
05c0001005bd00280580001a042f001f0000ffd90000ffda0000ffd9fe55
ffe605c70010fe6dfff1033b000000b9000000b902fe3f3c00c0008d009b
00af000600a800c00028005e009800c9016a00b9015c00b400d6011e002e
0080000400b8004c00cc01ffffd1006600a400af007400c2009500b1000c
0028006d0015004c008e0125ff7a000c0040004c00620084ffa200240038
008600bd0039005e008e00edffa9ffb300400052005500aa00ab00c200cb
012302b10413ffaeffe4000800510074008400aa00d1ff4cffaf0012002c
004200500051008400be012503daff680018003b0098009c009f00a100c1
00ec018201b4ff68ff76ffd0ffe100020018001c00530053007d01b401e1
03af0486ff9cffeafffe001f0028002a00520060009300a300aa00af00af
00c001000145016b0174019301950240028202b404850517fefd00060029
004700470048006f008800b400b900c400f200f901ef02180310037403c5
ff35fff3000b004b004c0052005500650076007600870087008e00ab00bb
0106013001430150017d0194019501d3022a025502580277027802e6034e
035c037903d3047304b2058c0598060bfef5ffbbffc7ffd50017001d005b
0072007e009c00c200d000f400fa01030106011c0125013b0142015e015e
0180019b02b901a101b9025001c001d002aa01df01e301ef01fb0205020c
0215022b0274029302ab02c202ce03690395039903df03f5043e050205a1
05e5062507dbfe62fe89feceff3bffe1fff800030008002100390042004e
005f0061006f00700034007f008e00ad00ad00af00bd00c400c500c900c9
00c900e3011c00ed00f800f901000112011a0132014d014d014e014f0166
0169019e01ba01ba01be01e301ef01f602000200020902110217021c0253
0262026d028002d50280031b032a034a035a03af03af03c803d603fb03fb
04050413041504470449008c046d049a049a04a604a804b204cf0539053e
054e055605800589058c036305d105d6067e068e06b206ef06f00728074c
076f078c00b400c900c000c10000000000000000000000000004012400af
0032006e0063014401620096014301a10161008a00740064018801ef0170
0028ff5d037e0347023000aa00be007b0062009a007d0089035c00a1ffd8
03aa00d70093006c0000008000a70442001d0597001d00820030002a002a
002a002a002a002a0093007600a000ac00b800ab00c50000002bfe55001a
042f002105be002740292a292827262524232221201f1e1d1c1b1a191817
161514131211100d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b09051582320b00d44235921212d2c20204518684420b001602045b046
76688a4560442d2c01b9400000000a2d2c00b9000040000b2d2c2045b000
43617d6818b0004360442d2c45b01a234445b01923442d2c2045b0032545
6164b050515845441b2121592d2c20b0032552582359212d2c69b04061b0
008b0c6423648bb8400062600c642364615c58b0036159b002602d2c45b0
112bb0172344b0177ae5182d2c45b0112bb01723442d2c45b0112bb01745
8cb0172344b0177ae5182d2cb002254661658a46b040608b482d2cb00225
46608a46b040618c482d2c4b53205c58b002855958b00185592d2c20b003
2545b019236a4445b01a23444565234520b00325606a20b009234223688a
6a606120b0005258b21a401a4523614459b0005058b21940194523614459
2d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b2d2cb93b21e7
830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c456920b00943b0022660b00325b00525
4961b0805358b21940194523616844b21a401a4523606a44b209191a4565
2345604259b00943608a103a2d2c01b005251023208af500b0016023edec
2d2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d
2c20b001600110203c003c2d2c20b001610110203c003c2d2c764520b003
254523616818236860442d2c7645b00325452361682318456860442d2c76
45b0032545616823452361442d2c4569b014b0324b505821b0205961442d
b8002b2c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db8002c2c2020456944b001602db8002d2cb8002c2a212db8002e2c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db8002f2c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db800302c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db800312c2020456944
b001602020457d691844b001602db800322cb800312a2db800332c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db800342c4b535845441b2121592db800352c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800362c20
20456944b001602db800372cb800362a212db800382c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800392c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db8003a2c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db8003b2c2020456944b00160202045
7d691844b001602db8003c2cb8003b2a2db8003d2c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db8003e2c4b535845441b2121592db8003f2c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db800402c2020456944b001
602db800412cb800402a212db800422c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db800432c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db800442c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db800452c2020456944b001602020457d691844b001
602db800462cb800452a2db800472c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
482c4b535845441b2121592db800492c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db8004a2c2020456944b001602db8004b2c
b8004a2a212db8004c2c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db8004d2c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db8004e2c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db8004f2c2020456944b001602020457d691844b001602db800502c
b8004f2a2db800512c4b20b003265358b0801bb040598a8a20b003265358
2321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b003
2653582321b801408a8a1b8a235920b80003265358b0032545b801805058
2321b8018023211bb003254523212321591b2159442db800522c4b535845
441b2121592db800532c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db800542c2020456944b001602db800552cb800542a212d
b800562c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db800572c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800582c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80059
2c2020456944b001602020457d691844b001602db8005a2cb800592a2db8
005b2c4b20b003265358b0401bb000598a8a20b0032653582321b0808a8a
1b8a235920b0032653582321b800c08a8a1b8a235920b0032653582321b8
01008a8a1b8a235920b0032653582321b801408a8a1b8a235920b8000326
5358b0032545b8018050582321b8018023211bb003254523212321591b21
59442db8005c2c4b535845441b2121592db8005d2c4bb800095058b10101
8e59b801ff85b800441db9000900035f5e2db8005e2c2020456944b00160
2db8005f2cb8005e2a212db800602c2046b003254652582359208a208a49
648a204620686164b004254620686164525823658a592f20b00053586920
b000545821b040591b6920b000545821b0406559593a2db800612c2046b0
0425465258238a592046206a6164b0042546206a61645258238a592ffd2d
b800622c4b20b0032650585158b080441bb04044591b21212045b0c05058
b0c0441b2159592db800632c2020456944b001602020457d691844b00160
2db800642cb800632a2db800652c4b20b003265358b0401bb000598a8a20
b0032653582321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a
235920b0032653582321b801008a8a1b8a235920b0032653582321b80140
8a8a1b8a235920b80003265358b0032545b8018050582321b8018023211b
b003254523212321591b2159442db800662c4b535845441b2121592d0001
00000000000002188d445f0f3cf500110800000000005f4d8f0000000000
dee02ed6f865fc270b9108f9000000090001000000000000000100000629
fe2900000c01f865fced0b9100010000000000000000000000000000005c
051200420000000000000000023900000000000000000000000000000000
000000000000000000000000000002aa008e02aa00440000000000000000
0000000002aa005500000000023900000000000000000000047300400473
003100000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000556001e0000
000005c7005a05c700a5055600af000000000000000005c700a1023900c9
00000000000000000473009c0000000005c7009c00000000055600af0000
0000000000000556006004e3002100000000055600340000000000000000
000000000000000000000000000000000000000000000000000000000000
000004730052000000000400003b04730038047300480239001c0473003d
0473008401c70084000000000400008001c7008906aa0084047300840473
003b047300760000000002aa00890400004202390017047300800400000b
05c700120400000b00150034000000350035003500350035003500350035
003500350035007c00bd00bd00bd00bd00da00da00fe00fe00fe01890234
023402340234023402340234023402340234023402340234023402720272
0301036203a503a503a503dc03f403f403f4041c041c0471047104c704c7
04c7059305c005c0061d061d061d061d061d061d061d061d061d061d061d
06e706e7076907d5089e08e9099009df0a0c0a0c0a7b0a9c0b180b740bec
0c5e0c5e0ca40d840dd30e2d0ec30f710fa110371087000000010000005e
006f0009006b00070002001000100067000007e80b900004000100000001
00120003000104090002000e00000052006500670075006c00610072b800
5d2b01ba000501b9005f2b01bf01bb003e00340029001d0012000000652b
bf01bc004200340029001d0012000000652bbf01bd003a00340029001d00
12000000652b00bf01b7004d003d003700280012000000652bbf01b80060
004f00370028001b000000652bbf01b90047003d0029001d001200000065
2bbf01ba004200340029001d0012000000652b00ba01be000400642bb801
b620457d691844b800532bb800492bb8003f2bb800352bb8002b2b411800
8001a6009001a600a001a600030069018b0079018b0089018b0099018b00
040089018b0099018b00a9018b00b9018bb2040840ba0179001a014a400b
041f5414191f180a0b1fd2b80106b49e1fd918e3bb0119000d00e10119b2
0d0009410a01a0019f0064001f01a50025017a00480028019ab3296c1f60
410a01a9007001a9008001a90003008001a9000101a9b21e321fbe012c00
250401001f0126001e0401b61fe7312d1fe531b80201b21fc227b80401b2
1fc11eb80201400f1fc01d9e1fbf1d671fbe1d671fab27b80401b21faa29
b80401b61fa91d6c1f931eb8019ab21f921db80101b21f911db80101b21f
751db80201b61f6d29961f6431b8019ab21f4c96b802abb21f391db80156
400b1f3638211f351de41f2f27b80801400b1f2d1d4c1f2a31cd1f241db8
02abb21f201eb8012540111f1c1d931f3a1d4c1f1e1d45273a1d4527bb01
aa019b002a019bb2254a1fba019b0025017ab349293896b8017bb3482831
25b8017a403648289629482725294c1f252946272729482756c80784075b
07410732072b072807260721071b071408120810080e080c080a08080807
b801acb23f1f06bb01ab003f001f01abb308060805b801aeb23f1f04bb01
ad003f001f01adb70804080208000814b8ffe0b40000010014b801abb410
00000100b801abb606100000010006b801adb300000100b801ad401f0400
0001000410000001001002000001000200000001000002010802004a00b0
018db806008516763f183f123e113946443e113946443e113946443e1139
46443e113946443e11394660443e11394660443e11394660442b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b18011db0964b5358
b0aa1d59b0324b5358b0ff1d592b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b
65422b2b4b5279b376706a66456523456023456560234560b08b766818b0
80622020b16a704565234520b003266062636820b003266165b070236544
b06a234420b176664565234520b003266062636820b003266165b0662365
44b0762344b10066455458b166406544b27640764523614459b36242725d
456523456023456560234560b089766818b080622020b172424565234520
b003266062636820b003266165b042236544b072234420b1625d45652345
20b003266062636820b003266165b05d236544b0622344b1005d455458b1
5d406544b262406245236144592b2b2b2b456953427374b8019a2045694b
20b02853b049515a58b020615944b801a62045694475000000>
[8463 ] AllocGlyphStorage
]def
124 60
PrepFor2015
Type42DictEnd

1 0 3 <> HAAAAA+Helvetica AddT42Char
1 106 11 <0001008efe5e026105d50014003e4009141109131617171a09bb019c0008
0014019c400e400080044c10191516f7216c5218b80732852b2b4ef44ded
1add1aedd4ed4e456544e6003f3f3130010207061110171613232e012726
27263510373613025e9d2f475132937992462938160b5d3bbb05d5fecf90
dbfee1fedef094feeae47e6c94a8574f0128e7930125>HAAAAA+Helvetica AddT42Char
1 248 12 <00010044fe5e021705d500130036400c081100131517171a044c0f13bb01
9c00000009019c400908191415f7213f7b182b2b4ef44dedd4eddded4e45
6544e6003f3f3130131237361110272603331e01171e011510070603479f
2e46513293799a412630295e3bbafe5e01368ed701210121f0940116f673
657df471fed8e895fede>HAAAAA+Helvetica AddT42Char
1 1866 43 <000100a10000052f05bd000b003f402108091e0302020401020a07080407
2506051a0d010a250b00190c0c0da0217670182b2b104ef43c4dfd3c4e10
f63c4dfd3c003f3c3f3c392f3cfd3c3130133311211133112311211123a1
c902fcc9c9fd04c905bdfda1025ffa4302affd51>HAAAAA+Helvetica AddT42Char
1 2274 51 <000200af000004f805bd000a001400614035690c6912790c7a1204481458
1468147a140407081e1110100a010e0f1e0100020a080206120c04091414
31041a160f092500191516b8010bb3219589182b2b4ef44dfd3c4e10f64d
fd11121739003f3f3cfd3c1012392f3cfd3c015d31305d13213216151406
2321112300272623211121323635af0295c4f0d6defe32c70380784273fe
74018c86a705bdddc8acfffd9304b93a1ffe03729000>HAAAAA+Helvetica AddT42Char
1 2446 54 <00020060ffd504f605e5002f003000fe405e290f27232626360e35214726
62267a0e7724096b08180e172502590e680eaa22030a0e3a2224220a0304
1c1886142f2f2b1c3a1403043a2b0930020a0e081124221f283030111825
17490825281a321f25114900252f193132a0216a89182b2b4ef44dedf4ed
4e10f64dedf4ed12392f1211393912113939003f3fed3fed12392f10ed11
1217392efd335d7131304379404d282e111f0008022602262d2506251a26
032c002b002d2e032c002b00052a082b011d131f2b001b15182b01191801
2d042b0009270b2b01250b012e042b000729042b001e121c2b0119161c2b
01002b2b2b2b10102b2b01103c2b2b2b2b103c2b2b2b2b2b2b818181005d
0116171633323736353427262f0126272635342433320415232627262322
06151417161f01161716151404232027263701011e073463fa705cb24b4c
a2c7c3518c0112fbe70143bb0f315bdab09a5a3bd0ce95518cfe9debfeee
9b9b03024d01da7d4e92203ea0783332252d2c355cb7c6fedff5763f7394
626c3220302f223b67c4f4d28c8bee040b00>HAAAAA+Helvetica AddT42Char
1 3130 68 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>HAAAAA+Helvetica AddT42Char
1 3534 70 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>HAAAAA+Helvetica AddT42Char
1 4010 72 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc00>HAAAAA+Helvetica AddT42Char
1 5054 76 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
>HAAAAA+Helvetica AddT42Char
1 5366 79 <000100890000013d05bd0003002940150000030a0517171a010229000319
0405aa216242182b2b4ef43c4dfd3c4e456544e6003f3f31301333112389
b4b405bdfa43>HAAAAA+Helvetica AddT42Char
1 5680 81 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>HAAAAA+Helvetica AddT42Char
1 5864 82 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>HAAAAA+Helvetica AddT42Char
1 6104 83 <00020076fe5504250449000e00220074402ca908a717022808201c110e06
1d15070f060e1d1c0b220e0227181a240a2e102e2129220f1923248721bd
5d182b2b4ef43c4dfde4e44e10f64ded003f3fed3f3fed11391239313043
79401c161b00051a260426001b022601051602260101190e260003170626
012b2b012b2b2b2b8181005d243635342726232207061514171633013315
363736333212111007062322272627112302c6a72546babb45252546bafe
2eaf36405b7bb6feb7749a7952303bb479d3d2805cb1bb649a7c57a603b1
8e49283cfee9fefdfea2965f351e49fddd00>HAAAAA+Helvetica AddT42Char
1 6920 87 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c593>HAAAAA+Helvetica AddT42Char
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb3>HAAAAA+Helvetica AddT42Char
HAAAAA+Helvetica /CharStrings get begin
/space 3 def
/parenleft 11 def
/parenright 12 def
/H 43 def
/P 51 def
/S 54 def
/a 68 def
/c 70 def
/e 72 def
/i 76 def
/l 79 def
/n 81 def
/o 82 def
/p 83 def
/t 87 def
end
HAAAAA+Helvetica /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 72 /H put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/RDZVHY+Helvetica /HAAAAA+Helvetica findfont ct_VMDictPut
/RDZVHY+Helvetica*1
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 30{/.notdef}rp /H 7{/.notdef}rp
/P 2{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o
/p 3{/.notdef}rp /t 139{/.notdef}rp]
RDZVHY+Helvetica nf
RDZVHY+Helvetica*1 [10.7156 0 0 -10.7156 0 0 ]msf
179.604 156.246 mo
(SHP)sh
201.449 156.246 mo
( Selection)sh
191.722 169.64 mo
(\(optional\))sh
275.009 136.489 mo
337.963 136.489 li
338.425 136.489 338.882 136.534 339.335 136.624 cv
339.788 136.714 340.228 136.847 340.654 137.024 cv
341.081 137.201 341.486 137.417 341.87 137.674 cv
342.254 137.93 342.609 138.222 342.936 138.548 cv
343.262 138.875 343.554 139.23 343.81 139.614 cv
344.067 139.998 344.283 140.403 344.46 140.83 cv
344.637 141.256 344.77 141.696 344.86 142.149 cv
344.95 142.602 344.995 143.059 344.995 143.521 cv
344.995 176.337 li
344.995 176.799 344.95 177.256 344.86 177.709 cv
344.77 178.162 344.637 178.602 344.46 179.028 cv
344.283 179.455 344.067 179.86 343.81 180.244 cv
343.554 180.628 343.262 180.983 342.936 181.31 cv
342.609 181.636 342.254 181.928 341.87 182.184 cv
341.486 182.441 341.081 182.658 340.654 182.834 cv
340.228 183.011 339.788 183.144 339.335 183.234 cv
338.882 183.325 338.425 183.37 337.963 183.37 cv
275.009 183.37 li
274.547 183.37 274.09 183.325 273.637 183.234 cv
273.184 183.144 272.745 183.011 272.318 182.834 cv
271.891 182.658 271.486 182.441 271.102 182.184 cv
270.718 181.928 270.363 181.636 270.037 181.31 cv
269.71 180.983 269.419 180.628 269.162 180.244 cv
268.906 179.86 268.689 179.455 268.512 179.028 cv
268.335 178.602 268.202 178.162 268.112 177.709 cv
268.022 177.256 267.977 176.799 267.977 176.337 cv
267.977 143.521 li
267.977 143.059 268.022 142.602 268.112 142.149 cv
268.202 141.696 268.336 141.256 268.512 140.83 cv
268.689 140.403 268.906 139.998 269.162 139.614 cv
269.419 139.23 269.71 138.875 270.037 138.548 cv
270.363 138.222 270.718 137.93 271.102 137.674 cv
271.486 137.417 271.891 137.201 272.318 137.024 cv
272.745 136.847 273.184 136.714 273.637 136.624 cv
274.09 136.534 274.547 136.489 275.009 136.489 cv
cp
0 0 0 0 cmyk
f
275.009 136.489 mo
337.963 136.489 li
338.425 136.489 338.882 136.534 339.335 136.624 cv
339.788 136.714 340.228 136.847 340.654 137.024 cv
341.081 137.201 341.486 137.417 341.87 137.674 cv
342.254 137.93 342.609 138.222 342.936 138.548 cv
343.262 138.875 343.554 139.23 343.81 139.614 cv
344.067 139.998 344.283 140.403 344.46 140.83 cv
344.637 141.256 344.77 141.696 344.86 142.149 cv
344.95 142.602 344.995 143.059 344.995 143.521 cv
344.995 176.337 li
344.995 176.799 344.95 177.256 344.86 177.709 cv
344.77 178.162 344.637 178.602 344.46 179.028 cv
344.283 179.455 344.067 179.86 343.81 180.244 cv
343.554 180.628 343.262 180.983 342.936 181.31 cv
342.609 181.636 342.254 181.928 341.87 182.184 cv
341.486 182.441 341.081 182.658 340.654 182.834 cv
340.228 183.011 339.788 183.144 339.335 183.234 cv
338.882 183.325 338.425 183.37 337.963 183.37 cv
275.009 183.37 li
274.547 183.37 274.09 183.325 273.637 183.234 cv
273.184 183.144 272.745 183.011 272.318 182.834 cv
271.891 182.658 271.486 182.441 271.102 182.184 cv
270.718 181.928 270.363 181.636 270.037 181.31 cv
269.71 180.983 269.419 180.628 269.162 180.244 cv
268.906 179.86 268.689 179.455 268.512 179.028 cv
268.335 178.602 268.202 178.162 268.112 177.709 cv
268.022 177.256 267.977 176.799 267.977 176.337 cv
267.977 143.521 li
267.977 143.059 268.022 142.602 268.112 142.149 cv
268.202 141.696 268.336 141.256 268.512 140.83 cv
268.689 140.403 268.906 139.998 269.162 139.614 cv
269.419 139.23 269.71 138.875 270.037 138.548 cv
270.363 138.222 270.718 137.93 271.102 137.674 cv
271.486 137.417 271.891 137.201 272.318 137.024 cv
272.745 136.847 273.184 136.714 273.637 136.624 cv
274.09 136.534 274.547 136.489 275.009 136.489 cv
cp
.749722 .679194 .670497 .901457 cmyk
@
%ADOBeginSubsetFont: HAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RDZVHY+Helvetica gcheck setglobal} if
1 1252 38 <0002005affda057105e5001d001e00b1403b1b0597019605031f011f0482
018705891305530803861d111115063a1d030c3a15091e021e1e19033102
3b1031111a20093119191f20a1216a66182b2b4ef44ded4e10f64dedf4ed
12392f003f3fed3fed12392f10ed31304379403a001c172513260e251b26
0b160932000d1410320112110f10071c0932000500033201010204030a18
0c32000f120c3200081a06320104010632012b2b2b2b01103c103c2b2b10
3c103c2b2b2b2b2b2b815d015d080117232e012322001110123332373637
3306070621202726111037362123041e013411c221c5b2d9fef5f1efdc73
3d1ec21a92affed7ff00aee5acba01472805e5fedabb8ea6fecffec5fefe
febfa95991e89dbd9bcd01ac0145d0e2>RDZVHY+Helvetica AddT42Char
1 4896 75 <00010084000003ed05c200160053402c0607070817071708270427137507
750808130d0213150000111d0607150c0a0d290a1a180115290016191718
b80106b3216242182b2b4ef43c4dfd3c4e10f64ded003f3c3fed3f113939
0112393130005d1333113637363332171615112311342726232206151123
84b440335782e9532db91e318770b6b405c2fddc512139a3599efd5102a3
7637589ad6fdc800>RDZVHY+Helvetica AddT42Char
1 5432 80 <0001008400000625044700260085403b0708070e060f1708170e170f2708
270e270f4819560b670b0c23250a1a1d23190a02041725211d171d0d0607
00061b1c2503130a2817171a112914b80101b21a291db80101400a00012e
25292600192728b8010db3216242182b2b4ef43c4dfde410f4edf4fd4e45
6544e6003f173c3f3f3c4deded111217390111123912393130005d133315
36373633321716173e013332171615112311342623220615112311342726
23220615112384b240345971804e2c243ca265d84e2abb6b4d6a99b71a29
7066a7b4042f984f243d3f244656539c548efd3702e86b508ea6fd9102bb
6d324b9ecffdc800>RDZVHY+Helvetica AddT42Char
1 6332 85 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>RDZVHY+Helvetica AddT42Char
1 7906 91 <0001000b000003e1042f000b002300b10a083fb00633b100063fb0033301
b00c2fb00dd600b1000a1112b102083939303113331b0117090123090123
011ee9f6f9dbfe970179e6fef6fefee40179042ffe87017905fdfbfddb01
92fe6e022500>RDZVHY+Helvetica AddT42Char
1 8302 93 <00020034000003b404490009000a006c4042370648005700580157066700
680167067705090105060629120000010a0a010605030501023904030600
07063908090a0a07053e071a0c034a00190b0cb221725d182b2b4ef44de4
4e10f64de4003f3f3cfd3c393f3cfd3c390111123939392f872e2b877dc5
3130015d370121352115012115210134027bfdb4033efd89028afc8001cf
8e0300a193fd05a10449>RDZVHY+Helvetica AddT42Char
RDZVHY+Helvetica /CharStrings get begin
/C 38 def
/h 75 def
/m 80 def
/r 85 def
/x 91 def
/z 93 def
end
RDZVHY+Helvetica /Encoding get
dup 67 /C put
dup 104 /h put
dup 109 /m put
dup 114 /r put
dup 120 /x put
dup 122 /z put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RDZVHY+Helvetica*1
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 25{/.notdef}rp /C 4{/.notdef}rp
/H 7{/.notdef}rp /P 2{/.notdef}rp /S 13{/.notdef}rp /a /.notdef
/c /.notdef /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l
/m /n /o /p /.notdef /r /.notdef /t
3{/.notdef}rp /x /.notdef /z 133{/.notdef}rp]
RDZVHY+Helvetica nf
RDZVHY+Helvetica*1 [10.7156 0 0 -10.7156 0 0 ]msf
279.938 150.218 mo
(Coherence)sh
291.564 162.943 mo
(matrix)sh
277.562 175.668 mo
(optimization)sh
2.00918 lw
10 ml
372.454 248.681 mo
338.044 248.668 li
@
333.523 248.668 mo
339.551 245.654 li
338.044 248.668 li
339.551 251.682 li
333.523 248.668 li
cp
f
333.523 248.668 mo
339.551 245.654 li
338.044 248.668 li
339.551 251.682 li
333.523 248.668 li
cp
@
193.637 258.714 mo
173.077 259.049 li
158.53 258.687 li
@
154.016 258.573 mo
160.118 255.713 li
158.53 258.687 li
159.964 261.734 li
154.016 258.573 li
cp
f
154.016 258.573 mo
160.118 255.713 li
158.53 258.687 li
159.964 261.734 li
154.016 258.573 li
cp
@
207.199 209.489 mo
321.388 209.489 li
322.278 209.489 323.16 209.576 324.033 209.749 cv
324.907 209.923 325.755 210.18 326.577 210.521 cv
327.4 210.862 328.182 211.28 328.922 211.774 cv
329.663 212.269 330.348 212.831 330.977 213.461 cv
331.607 214.091 332.169 214.776 332.664 215.516 cv
333.159 216.257 333.576 217.038 333.917 217.861 cv
334.258 218.684 334.515 219.532 334.689 220.405 cv
334.863 221.278 334.95 222.16 334.95 223.051 cv
334.95 286.34 li
334.95 287.23 334.863 288.112 334.689 288.986 cv
334.515 289.859 334.258 290.707 333.917 291.53 cv
333.576 292.353 333.159 293.134 332.664 293.874 cv
332.169 294.615 331.607 295.3 330.977 295.93 cv
330.348 296.559 329.663 297.122 328.922 297.616 cv
328.182 298.111 327.4 298.529 326.577 298.869 cv
325.755 299.21 324.907 299.468 324.033 299.641 cv
323.16 299.815 322.278 299.902 321.388 299.902 cv
207.199 299.902 li
206.309 299.902 205.427 299.815 204.553 299.641 cv
203.68 299.468 202.832 299.21 202.009 298.869 cv
201.187 298.529 200.405 298.111 199.665 297.616 cv
198.924 297.122 198.239 296.559 197.61 295.93 cv
196.98 295.3 196.418 294.615 195.923 293.874 cv
195.428 293.134 195.01 292.353 194.67 291.53 cv
194.329 290.707 194.072 289.859 193.898 288.986 cv
193.724 288.112 193.637 287.23 193.637 286.34 cv
193.637 223.051 li
193.637 222.16 193.724 221.278 193.898 220.405 cv
194.072 219.532 194.329 218.684 194.67 217.861 cv
195.01 217.038 195.428 216.257 195.923 215.516 cv
196.418 214.776 196.98 214.091 197.61 213.461 cv
198.239 212.831 198.924 212.269 199.665 211.774 cv
200.405 211.28 201.187 210.862 202.009 210.521 cv
202.832 210.18 203.68 209.923 204.553 209.749 cv
205.427 209.576 206.309 209.489 207.199 209.489 cv
cp
0 0 0 0 cmyk
f
.669726 lw
4 ml
207.199 209.489 mo
321.388 209.489 li
322.278 209.489 323.16 209.576 324.033 209.749 cv
324.907 209.923 325.755 210.18 326.577 210.521 cv
327.4 210.862 328.182 211.28 328.922 211.774 cv
329.663 212.269 330.348 212.831 330.977 213.461 cv
331.607 214.091 332.169 214.776 332.664 215.516 cv
333.159 216.257 333.576 217.038 333.917 217.861 cv
334.258 218.684 334.515 219.532 334.689 220.405 cv
334.863 221.278 334.95 222.16 334.95 223.051 cv
334.95 286.34 li
334.95 287.23 334.863 288.112 334.689 288.986 cv
334.515 289.859 334.258 290.707 333.917 291.53 cv
333.576 292.353 333.159 293.134 332.664 293.874 cv
332.169 294.615 331.607 295.3 330.977 295.93 cv
330.348 296.559 329.663 297.122 328.922 297.616 cv
328.182 298.111 327.4 298.529 326.577 298.869 cv
325.755 299.21 324.907 299.468 324.033 299.641 cv
323.16 299.815 322.278 299.902 321.388 299.902 cv
207.199 299.902 li
206.309 299.902 205.427 299.815 204.553 299.641 cv
203.68 299.468 202.832 299.21 202.009 298.869 cv
201.187 298.529 200.405 298.111 199.665 297.616 cv
198.924 297.122 198.239 296.559 197.61 295.93 cv
196.98 295.3 196.418 294.615 195.923 293.874 cv
195.428 293.134 195.01 292.353 194.67 291.53 cv
194.329 290.707 194.072 289.859 193.898 288.986 cv
193.724 288.112 193.637 287.23 193.637 286.34 cv
193.637 223.051 li
193.637 222.16 193.724 221.278 193.898 220.405 cv
194.072 219.532 194.329 218.684 194.67 217.861 cv
195.01 217.038 195.428 216.257 195.923 215.516 cv
196.418 214.776 196.98 214.091 197.61 213.461 cv
198.239 212.831 198.924 212.269 199.665 211.774 cv
200.405 211.28 201.187 210.862 202.009 210.521 cv
202.832 210.18 203.68 209.923 204.553 209.749 cv
205.427 209.576 206.309 209.489 207.199 209.489 cv
cp
.749722 .679194 .670497 .901457 cmyk
@
%ADOBeginSubsetFont: GAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RDZVHX+Helvetica gcheck setglobal} if
1 358 55 <00010021000004c905bd00070034401a01061e00070204080917171a00fb
0203250504fb0619088c5e182b4e10f44df43cfd3cf44e456544e6003f3f
3c4dfd3c3130011521112311213504c9fe11cafe1105bdaffaf2050eaf00
>RDZVHX+Helvetica AddT42Char
1 996 70 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>RDZVHX+Helvetica AddT42Char
1 2462 80 <0001008400000625044700260085403b0708070e060f1708170e170f2708
270e270f4819560b670b0c23250a1a1d23190a02041725211d171d0d0607
00061b1c2503130a2817171a112914b80101b21a291db80101400a00012e
25292600192728b8010db3216242182b2b4ef43c4dfde410f4edf4fd4e45
6544e6003f173c3f3f3c4deded111217390111123912393130005d133315
36373633321716173e013332171615112311342623220615112311342726
23220615112384b240345971804e2c243ca265d84e2abb6b4d6a99b71a29
7066a7b4042f984f243d3f244656539c548efd3702e86b508ea6fd9102bb
6d324b9ecffdc800>RDZVHX+Helvetica AddT42Char
1 2894 82 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>RDZVHX+Helvetica AddT42Char
1 3362 85 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>RDZVHX+Helvetica AddT42Char
RDZVHX+Helvetica /CharStrings get begin
/T 55 def
/c 70 def
/m 80 def
/o 82 def
/r 85 def
end
RDZVHX+Helvetica /Encoding get
dup 84 /T put
dup 99 /c put
dup 109 /m put
dup 111 /o put
dup 114 /r put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RDZVHX+Helvetica*1
[32{/.notdef}rp /space 43{/.notdef}rp /L 3{/.notdef}rp /P 3{/.notdef}rp /T
12{/.notdef}rp /a /.notdef /c /.notdef /e /.notdef /g
/h /i /.notdef /k /.notdef /m /n /o
2{/.notdef}rp /r /s 140{/.notdef}rp]
RDZVHX+Helvetica nf
RDZVHX+Helvetica*1 [12.0551 0 0 -12.0551 0 0 ]msf
203.212 259.383 mo
(T)sh
210.135 259.383 mo
(imeseries Processing)sh
%ADOBeginSubsetFont: IAAAAA+Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /IAAAAA+Helvetica
Type42DictBegin
[<00010000000c000c000c000c4f532f32950ff979000000cc000000606376
7420982241db0000012c0000038c6670676d52c5ad27000004b800000b90
676c796661582bfd000015bc000000a468656164a14707f4000010480000
0036686865610a2207290000108000000024686d747807bc0097000010a4
000000446c6f636101a801fa000010e8000000246d61787008850c7d0000
110c000000206e616d65015005b20000112c0000002070726570c412718a
0000114c0000046e67646972000000000000000000000000000303880190
00050000059905330000011e05990533000003d000660200000000000000
00000000000000000001000000000000000000000000707972730040002d
002d0600fea4003d079a01cd2000019f4f010000042f05bd000000200000
05c0001005bd00280580001a042f001f0000ffd90000ffda0000ffd9fe55
ffe605c70010fe6dfff1033b000000b9000000b902fe3f3c00c0008d009b
00af000600a800c00028005e009800c9016a00b9015c00b400d6011e002e
0080000400b8004c00cc01ffffd1006600a400af007400c2009500b1000c
0028006d0015004c008e0125ff7a000c0040004c00620084ffa200240038
008600bd0039005e008e00edffa9ffb300400052005500aa00ab00c200cb
012302b10413ffaeffe4000800510074008400aa00d1ff4cffaf0012002c
004200500051008400be012503daff680018003b0098009c009f00a100c1
00ec018201b4ff68ff76ffd0ffe100020018001c00530053007d01b401e1
03af0486ff9cffeafffe001f0028002a00520060009300a300aa00af00af
00c001000145016b0174019301950240028202b404850517fefd00060029
004700470048006f008800b400b900c400f200f901ef02180310037403c5
ff35fff3000b004b004c0052005500650076007600870087008e00ab00bb
0106013001430150017d0194019501d3022a025502580277027802e6034e
035c037903d3047304b2058c0598060bfef5ffbbffc7ffd50017001d005b
0072007e009c00c200d000f400fa01030106011c0125013b0142015e015e
0180019b02b901a101b9025001c001d002aa01df01e301ef01fb0205020c
0215022b0274029302ab02c202ce03690395039903df03f5043e050205a1
05e5062507dbfe62fe89feceff3bffe1fff800030008002100390042004e
005f0061006f00700034007f008e00ad00ad00af00bd00c400c500c900c9
00c900e3011c00ed00f800f901000112011a0132014d014d014e014f0166
0169019e01ba01ba01be01e301ef01f602000200020902110217021c0253
0262026d028002d50280031b032a034a035a03af03af03c803d603fb03fb
04050413041504470449008c046d049a049a04a604a804b204cf0539053e
054e055605800589058c036305d105d6067e068e06b206ef06f00728074c
076f078c00b400c900c000c10000000000000000000000000004012400af
0032006e0063014401620096014301a10161008a00740064018801ef0170
0028ff5d037e0347023000aa00be007b0062009a007d0089035c00a1ffd8
03aa00d70093006c0000008000a70442001d0597001d00820030002a002a
002a002a002a002a0093007600a000ac00b800ab00c50000002bfe55001a
042f002105be002740292a292827262524232221201f1e1d1c1b1a191817
161514131211100d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b09051582320b00d44235921212d2c20204518684420b001602045b046
76688a4560442d2c01b9400000000a2d2c00b9000040000b2d2c2045b000
43617d6818b0004360442d2c45b01a234445b01923442d2c2045b0032545
6164b050515845441b2121592d2c20b0032552582359212d2c69b04061b0
008b0c6423648bb8400062600c642364615c58b0036159b002602d2c45b0
112bb0172344b0177ae5182d2c45b0112bb01723442d2c45b0112bb01745
8cb0172344b0177ae5182d2cb002254661658a46b040608b482d2cb00225
46608a46b040618c482d2c4b53205c58b002855958b00185592d2c20b003
2545b019236a4445b01a23444565234520b00325606a20b009234223688a
6a606120b0005258b21a401a4523614459b0005058b21940194523614459
2d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b2d2cb93b21e7
830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c456920b00943b0022660b00325b00525
4961b0805358b21940194523616844b21a401a4523606a44b209191a4565
2345604259b00943608a103a2d2c01b005251023208af500b0016023edec
2d2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d
2c20b001600110203c003c2d2c20b001610110203c003c2d2c764520b003
254523616818236860442d2c7645b00325452361682318456860442d2c76
45b0032545616823452361442d2c4569b014b0324b505821b0205961442d
b8002b2c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db8002c2c2020456944b001602db8002d2cb8002c2a212db8002e2c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db8002f2c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db800302c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db800312c2020456944
b001602020457d691844b001602db800322cb800312a2db800332c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db800342c4b535845441b2121592db800352c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800362c20
20456944b001602db800372cb800362a212db800382c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800392c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db8003a2c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db8003b2c2020456944b00160202045
7d691844b001602db8003c2cb8003b2a2db8003d2c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db8003e2c4b535845441b2121592db8003f2c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db800402c2020456944b001
602db800412cb800402a212db800422c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db800432c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db800442c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db800452c2020456944b001602020457d691844b001
602db800462cb800452a2db800472c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
482c4b535845441b2121592db800492c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db8004a2c2020456944b001602db8004b2c
b8004a2a212db8004c2c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db8004d2c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db8004e2c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db8004f2c2020456944b001602020457d691844b001602db800502c
b8004f2a2db800512c4b20b003265358b0801bb040598a8a20b003265358
2321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b003
2653582321b801408a8a1b8a235920b80003265358b0032545b801805058
2321b8018023211bb003254523212321591b2159442db800522c4b535845
441b2121592db800532c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db800542c2020456944b001602db800552cb800542a212d
b800562c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db800572c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800582c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80059
2c2020456944b001602020457d691844b001602db8005a2cb800592a2db8
005b2c4b20b003265358b0401bb000598a8a20b0032653582321b0808a8a
1b8a235920b0032653582321b800c08a8a1b8a235920b0032653582321b8
01008a8a1b8a235920b0032653582321b801408a8a1b8a235920b8000326
5358b0032545b8018050582321b8018023211bb003254523212321591b21
59442db8005c2c4b535845441b2121592db8005d2c4bb800095058b10101
8e59b801ff85b800441db9000900035f5e2db8005e2c2020456944b00160
2db8005f2cb8005e2a212db800602c2046b003254652582359208a208a49
648a204620686164b004254620686164525823658a592f20b00053586920
b000545821b040591b6920b000545821b0406559593a2db800612c2046b0
0425465258238a592046206a6164b0042546206a61645258238a592ffd2d
b800622c4b20b0032650585158b080441bb04044591b21212045b0c05058
b0c0441b2159592db800632c2020456944b001602020457d691844b00160
2db800642cb800632a2db800652c4b20b003265358b0401bb000598a8a20
b0032653582321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a
235920b0032653582321b801008a8a1b8a235920b0032653582321b80140
8a8a1b8a235920b80003265358b0032545b8018050582321b8018023211b
b003254523212321591b2159442db800662c4b535845441b2121592d0001
0000000000002a6b575a5f0f3cf500110800000000005f4d8f0000000000
dee02ed6f865fc270b9108f9000000090001000000000000000100000629
fe2900000c01f865fced0b91000100000000000000000000000000000011
051200420000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000002aa005500000035003500350035003500350035003500350035
0035003500350035003500350052000100000011006f0009006b00070002
001000100067000007e80b90000400010000000100120003000104090002
000e00000052006500670075006c00610072b8005d2b01ba000501b9005f
2b01bf01bb003e00340029001d0012000000652bbf01bc00420034002900
1d0012000000652bbf01bd003a00340029001d0012000000652b00bf01b7
004d003d003700280012000000652bbf01b80060004f00370028001b0000
00652bbf01b90047003d0029001d0012000000652bbf01ba004200340029
001d0012000000652b00ba01be000400642bb801b620457d691844b80053
2bb800492bb8003f2bb800352bb8002b2b4118008001a6009001a600a001
a600030069018b0079018b0089018b0099018b00040089018b0099018b00
a9018b00b9018bb2040840ba0179001a014a400b041f5414191f180a0b1f
d2b80106b49e1fd918e3bb0119000d00e10119b20d0009410a01a0019f00
64001f01a50025017a00480028019ab3296c1f60410a01a9007001a90080
01a90003008001a9000101a9b21e321fbe012c00250401001f0126001e04
01b61fe7312d1fe531b80201b21fc227b80401b21fc11eb80201400f1fc0
1d9e1fbf1d671fbe1d671fab27b80401b21faa29b80401b61fa91d6c1f93
1eb8019ab21f921db80101b21f911db80101b21f751db80201b61f6d2996
1f6431b8019ab21f4c96b802abb21f391db80156400b1f3638211f351de4
1f2f27b80801400b1f2d1d4c1f2a31cd1f241db802abb21f201eb8012540
111f1c1d931f3a1d4c1f1e1d45273a1d4527bb01aa019b002a019bb2254a
1fba019b0025017ab349293896b8017bb348283125b8017a403648289629
482725294c1f252946272729482756c80784075b07410732072b07280726
0721071b071408120810080e080c080a08080807b801acb23f1f06bb01ab
003f001f01abb308060805b801aeb23f1f04bb01ad003f001f01adb70804
080208000814b8ffe0b40000010014b801abb41000000100b801abb60610
0000010006b801adb300000100b801ad401f040000010004100000010010
02000001000200000001000002010802004a00b0018db806008516763f18
3f123e113946443e113946443e113946443e113946443e113946443e1139
4660443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358b0
ff1d592b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b65422b2b4b5279b37670
6a66456523456023456560234560b08b766818b080622020b16a70456523
4520b003266062636820b003266165b070236544b06a234420b176664565
234520b003266062636820b003266165b066236544b0762344b100664554
58b166406544b27640764523614459b36242725d45652345602345656023
4560b089766818b080622020b172424565234520b003266062636820b003
266165b042236544b072234420b1625d4565234520b003266062636820b0
03266165b05d236544b0622344b1005d455458b15d406544b26240624523
6144592b2b2b2b456953427374b8019a2045694b20b02853b049515a58b0
20615944b801a62045694475000000>
[165 ] AllocGlyphStorage
]def
124 60
PrepFor2015
Type42DictEnd
1 106 16 <0001005501de024b029700030020400a002f03011a0500190405b80142b3
21ba48182b2b4ee410e6002f4ded3130132115215501f6fe0a0297b9>IAAAAA+Helvetica AddT42Char
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb3>IAAAAA+Helvetica AddT42Char
IAAAAA+Helvetica /CharStrings get begin
/hyphen 16 def
end
IAAAAA+Helvetica /Encoding get
dup 45 /hyphen put
pop
end
%ADOEndSubsetFont
/RDZVHZ+Helvetica /IAAAAA+Helvetica findfont ct_VMDictPut
/RDZVHZ+Helvetica*1
[45{/.notdef}rp /hyphen 210{/.notdef}rp]
RDZVHZ+Helvetica nf
RDZVHZ+Helvetica*1 [8.0325 0 0 -8.0325 0 0 ]msf
445.117 100.656 mo
(-)sh
2.00918 lw
10 ml
446.794 169.305 mo
446.794 184.039 li
446.794 191.935 li
@
446.794 196.456 mo
443.78 190.428 li
446.794 191.935 li
449.808 190.428 li
446.794 196.456 li
cp
f
446.794 196.456 mo
443.78 190.428 li
446.794 191.935 li
449.808 190.428 li
446.794 196.456 li
cp
@
446.794 88.9382 mo
507.069 117.877 li
507.069 140.366 li
446.794 169.305 li
386.518 140.366 li
386.518 117.877 li
446.794 88.9382 li
cp
0 0 0 0 cmyk
f
.669726 lw
446.794 88.9382 mo
507.069 117.877 li
507.069 140.366 li
446.794 169.305 li
386.518 140.366 li
386.518 117.877 li
446.794 88.9382 li
cp
.749722 .679194 .670497 .901457 cmyk
@
386.518 117.877 mo
446.794 146.823 li
507.069 117.877 li
446.794 146.823 mo
446.794 169.305 li
@
%ADOBeginSubsetFont: HAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RDZVHY+Helvetica gcheck setglobal} if
1 1976 44 <000100c90000019205bd00030017b8002b2bba00010000002e2b00b80000
2fb800022f303113331123c9c9c905bdfa43>RDZVHY+Helvetica AddT42Char
1 4412 73 <0001001c0000021705d20017004d402b071d060a1d03010f1439160d0612
0a1917171a0e0d1129171207120f0e1f0e020efc14191819fc21677e182b
2b4ef44dfd5d39c42f3cfd3c104e456544e6003f3f3c4dfd3c3fedd4ed31
3012373633321617152e012322061533152311231123353335b5233fb411
24171c190b5220b2b4b295950542345c0202a4020155ae8efc64039c8ea8
>RDZVHY+Helvetica AddT42Char
1 4562 74 <0003003dfe3b03e80449001f002d002e00b7404d36144908490958085909
880ca91ba81da927a62bb91b0b4008031622290ec40a221d1f070406291d
190a121d0a0f2e072e2e051c032e162e2d29051a300c0e270d3e26271c19
2f3087217242182b2b4ef44dedf4ed394e10f64dfde4f51112392f003f3f
ed3fed3f3fed10ed1112393931304379402c23281a1e0b1124251026231e
262600281a262600110b0e21000f0e0c0d251d222601271b2926000f0c12
2100002b2b2b01103c103c2b2b2b2b2b818181005d001716173533111407
06212226273316171633323736270e012322241110003300262322070615
1416333237363501027c5e3335a63c70fec9adec0eb70d273d83cf402603
36987daefefb0107ba0144a47fbe4625937cc24f2cfed104423e234387fc
32cc76da9ba548273c9256dd5250f7011d010d012efea1c0b25f9ab5bdaf
6384022d>RDZVHY+Helvetica AddT42Char
1 6472 86 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>RDZVHY+Helvetica AddT42Char
RDZVHY+Helvetica /CharStrings get begin
/I 44 def
/f 73 def
/g 74 def
/s 86 def
end
RDZVHY+Helvetica /Encoding get
dup 73 /I put
dup 102 /f put
dup 103 /g put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RDZVHY+Helvetica*1
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 25{/.notdef}rp /C 4{/.notdef}rp
/H /I 6{/.notdef}rp /P 2{/.notdef}rp /S 13{/.notdef}rp /a
/.notdef /c /.notdef /e /f /g /h /i
2{/.notdef}rp /l /m /n /o /p /.notdef /r
/s /t 3{/.notdef}rp /x /.notdef /z 133{/.notdef}rp]
RDZVHY+Helvetica nf
RDZVHY+Helvetica*1 [10.7156 0 0 -10.7156 0 0 ]msf
411.612 120.75 mo
(Interferograms)sh
386.518 121.895 mo
446.794 151.223 li
@
386.518 127.923 mo
446.794 157.25 li
@
386.518 133.951 mo
446.794 163.278 li
@
507.069 135.149 mo
446.794 163.137 li
@
507.069 129.122 mo
446.794 157.11 li
@
506.399 123.094 mo
446.794 151.082 li
@
446.794 88.9382 mo
507.069 117.877 li
507.069 140.366 li
446.794 169.305 li
386.518 140.366 li
386.518 117.877 li
446.794 88.9382 li
cp
0 0 0 0 cmyk
f
446.794 88.9382 mo
507.069 117.877 li
507.069 140.366 li
446.794 169.305 li
386.518 140.366 li
386.518 117.877 li
446.794 88.9382 li
cp
.749722 .679194 .670497 .901457 cmyk
@
386.518 117.877 mo
446.794 146.823 li
507.069 117.877 li
446.794 146.823 mo
446.794 169.305 li
@
RDZVHY+Helvetica*1 [10.7156 0 0 -10.7156 0 0 ]msf
411.612 120.75 mo
(Interferograms)sh
386.518 122.565 mo
446.794 151.892 li
@
386.518 127.923 mo
446.794 157.25 li
@
386.518 133.951 mo
446.794 163.278 li
@
507.069 135.149 mo
446.794 163.137 li
@
507.069 129.122 mo
446.794 157.11 li
@
506.949 123.496 mo
446.794 151.752 li
@
RDZVHZ+Helvetica*1 [8.0325 0 0 -8.0325 0 0 ]msf
391.363 28.3274 mo
(-)sh
393.048 16.6078 mo
411.633 25.5286 li
411.633 32.4669 li
393.048 41.3877 li
374.463 32.4669 li
374.463 25.5286 li
393.048 16.6078 li
cp
0 0 0 0 cmyk
f
393.048 16.6078 mo
411.633 25.5286 li
411.633 32.4669 li
393.048 41.3877 li
374.463 32.4669 li
374.463 25.5286 li
393.048 16.6078 li
cp
.749722 .679194 .670497 .901457 cmyk
@
374.463 25.5286 mo
393.048 34.456 li
411.633 25.5286 li
393.048 34.456 mo
393.048 41.3877 li
@
374.463 26.7676 mo
393.048 35.8089 li
@
374.463 28.6294 mo
393.048 37.6707 li
@
374.463 30.4845 mo
393.048 39.5258 li
@
411.633 30.8529 mo
393.048 39.4856 li
@
411.633 28.9977 mo
393.048 37.6305 li
@
411.426 27.1426 mo
393.048 35.7687 li
@
380.123 56.7914 mo
399.444 56.7914 li
399.684 56.7914 399.915 56.8372 400.136 56.929 cv
400.358 57.0208 400.553 57.1514 400.723 57.321 cv
400.892 57.4905 401.023 57.6861 401.115 57.9076 cv
401.206 58.1292 401.252 58.3598 401.252 58.5996 cv
401.252 67.0382 li
401.252 67.278 401.206 67.5086 401.115 67.7302 cv
401.023 67.9517 400.892 68.1472 400.723 68.3168 cv
400.553 68.4864 400.358 68.617 400.136 68.7088 cv
399.915 68.8005 399.684 68.8464 399.444 68.8464 cv
380.123 68.8464 li
379.883 68.8464 379.652 68.8005 379.431 68.7088 cv
379.209 68.617 379.013 68.4864 378.844 68.3168 cv
378.674 68.1472 378.544 67.9517 378.452 67.7302 cv
378.36 67.5086 378.314 67.278 378.314 67.0382 cv
378.314 58.5996 li
378.314 58.3598 378.36 58.1292 378.452 57.9076 cv
378.544 57.6861 378.674 57.4905 378.844 57.321 cv
379.013 57.1514 379.209 57.0208 379.431 56.929 cv
379.652 56.8372 379.883 56.7914 380.123 56.7914 cv
cp
0 0 0 0 cmyk
f
4 ml
380.123 56.7914 mo
399.444 56.7914 li
399.684 56.7914 399.915 56.8372 400.136 56.929 cv
400.358 57.0208 400.553 57.1514 400.723 57.321 cv
400.892 57.4905 401.023 57.6861 401.115 57.9076 cv
401.206 58.1292 401.252 58.3598 401.252 58.5996 cv
401.252 67.0382 li
401.252 67.278 401.206 67.5086 401.115 67.7302 cv
401.023 67.9517 400.892 68.1472 400.723 68.3168 cv
400.553 68.4864 400.358 68.617 400.136 68.7088 cv
399.915 68.8005 399.684 68.8464 399.444 68.8464 cv
380.123 68.8464 li
379.883 68.8464 379.652 68.8005 379.431 68.7088 cv
379.209 68.617 379.013 68.4864 378.844 68.3168 cv
378.674 68.1472 378.544 67.9517 378.452 67.7302 cv
378.36 67.5086 378.314 67.278 378.314 67.0382 cv
378.314 58.5996 li
378.314 58.3598 378.36 58.1292 378.452 57.9076 cv
378.544 57.6861 378.674 57.4905 378.844 57.321 cv
379.013 57.1514 379.209 57.0208 379.431 56.929 cv
379.652 56.8372 379.883 56.7914 380.123 56.7914 cv
cp
.749722 .679194 .670497 .901457 cmyk
@
%ADOBeginSubsetFont: KAAAAA+Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /KAAAAA+Helvetica
Type42DictBegin
[<00010000000c000c000c000c4f532f329504344e000000cc000000606376
7420982241db0000012c0000038c6670676d52c5ad27000004b800000b90
676c7966d73a84aa000019e4000014d068656164a14707f4000010480000
0036686865610a2207da0000108000000024686d747866e208ce000010a4
000003086c6f6361748570d4000013ac000001866d61787009360c7d0000
1534000000206e616d65015005b2000015540000002070726570c412718a
000015740000046e67646972000000000000000000000000000303880190
00050000059905330000011e05990533000003d000660200000000000000
000000000000000000014000000000000000000000007079727300400020
fb020600fea4003d079a01cd2000019f4f010000042f05bd000000200000
05c0001005bd00280580001a042f001f0000ffd90000ffda0000ffd9fe55
ffe605c70010fe6dfff1033b000000b9000000b902fe3f3c00c0008d009b
00af000600a800c00028005e009800c9016a00b9015c00b400d6011e002e
0080000400b8004c00cc01ffffd1006600a400af007400c2009500b1000c
0028006d0015004c008e0125ff7a000c0040004c00620084ffa200240038
008600bd0039005e008e00edffa9ffb300400052005500aa00ab00c200cb
012302b10413ffaeffe4000800510074008400aa00d1ff4cffaf0012002c
004200500051008400be012503daff680018003b0098009c009f00a100c1
00ec018201b4ff68ff76ffd0ffe100020018001c00530053007d01b401e1
03af0486ff9cffeafffe001f0028002a00520060009300a300aa00af00af
00c001000145016b0174019301950240028202b404850517fefd00060029
004700470048006f008800b400b900c400f200f901ef02180310037403c5
ff35fff3000b004b004c0052005500650076007600870087008e00ab00bb
0106013001430150017d0194019501d3022a025502580277027802e6034e
035c037903d3047304b2058c0598060bfef5ffbbffc7ffd50017001d005b
0072007e009c00c200d000f400fa01030106011c0125013b0142015e015e
0180019b02b901a101b9025001c001d002aa01df01e301ef01fb0205020c
0215022b0274029302ab02c202ce03690395039903df03f5043e050205a1
05e5062507dbfe62fe89feceff3bffe1fff800030008002100390042004e
005f0061006f00700034007f008e00ad00ad00af00bd00c400c500c900c9
00c900e3011c00ed00f800f901000112011a0132014d014d014e014f0166
0169019e01ba01ba01be01e301ef01f602000200020902110217021c0253
0262026d028002d50280031b032a034a035a03af03af03c803d603fb03fb
04050413041504470449008c046d049a049a04a604a804b204cf0539053e
054e055605800589058c036305d105d6067e068e06b206ef06f00728074c
076f078c00b400c900c000c10000000000000000000000000004012400af
0032006e0063014401620096014301a10161008a00740064018801ef0170
0028ff5d037e0347023000aa00be007b0062009a007d0089035c00a1ffd8
03aa00d70093006c0000008000a70442001d0597001d00820030002a002a
002a002a002a002a0093007600a000ac00b800ab00c50000002bfe55001a
042f002105be002740292a292827262524232221201f1e1d1c1b1a191817
161514131211100d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b09051582320b00d44235921212d2c20204518684420b001602045b046
76688a4560442d2c01b9400000000a2d2c00b9000040000b2d2c2045b000
43617d6818b0004360442d2c45b01a234445b01923442d2c2045b0032545
6164b050515845441b2121592d2c20b0032552582359212d2c69b04061b0
008b0c6423648bb8400062600c642364615c58b0036159b002602d2c45b0
112bb0172344b0177ae5182d2c45b0112bb01723442d2c45b0112bb01745
8cb0172344b0177ae5182d2cb002254661658a46b040608b482d2cb00225
46608a46b040618c482d2c4b53205c58b002855958b00185592d2c20b003
2545b019236a4445b01a23444565234520b00325606a20b009234223688a
6a606120b0005258b21a401a4523614459b0005058b21940194523614459
2d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b2d2cb93b21e7
830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c456920b00943b0022660b00325b00525
4961b0805358b21940194523616844b21a401a4523606a44b209191a4565
2345604259b00943608a103a2d2c01b005251023208af500b0016023edec
2d2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d
2c20b001600110203c003c2d2c20b001610110203c003c2d2c764520b003
254523616818236860442d2c7645b00325452361682318456860442d2c76
45b0032545616823452361442d2c4569b014b0324b505821b0205961442d
b8002b2c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db8002c2c2020456944b001602db8002d2cb8002c2a212db8002e2c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db8002f2c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db800302c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db800312c2020456944
b001602020457d691844b001602db800322cb800312a2db800332c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db800342c4b535845441b2121592db800352c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800362c20
20456944b001602db800372cb800362a212db800382c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800392c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db8003a2c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db8003b2c2020456944b00160202045
7d691844b001602db8003c2cb8003b2a2db8003d2c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db8003e2c4b535845441b2121592db8003f2c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db800402c2020456944b001
602db800412cb800402a212db800422c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db800432c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db800442c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db800452c2020456944b001602020457d691844b001
602db800462cb800452a2db800472c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
482c4b535845441b2121592db800492c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db8004a2c2020456944b001602db8004b2c
b8004a2a212db8004c2c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db8004d2c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db8004e2c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db8004f2c2020456944b001602020457d691844b001602db800502c
b8004f2a2db800512c4b20b003265358b0801bb040598a8a20b003265358
2321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b003
2653582321b801408a8a1b8a235920b80003265358b0032545b801805058
2321b8018023211bb003254523212321591b2159442db800522c4b535845
441b2121592db800532c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db800542c2020456944b001602db800552cb800542a212d
b800562c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db800572c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800582c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80059
2c2020456944b001602020457d691844b001602db8005a2cb800592a2db8
005b2c4b20b003265358b0401bb000598a8a20b0032653582321b0808a8a
1b8a235920b0032653582321b800c08a8a1b8a235920b0032653582321b8
01008a8a1b8a235920b0032653582321b801408a8a1b8a235920b8000326
5358b0032545b8018050582321b8018023211bb003254523212321591b21
59442db8005c2c4b535845441b2121592db8005d2c4bb800095058b10101
8e59b801ff85b800441db9000900035f5e2db8005e2c2020456944b00160
2db8005f2cb8005e2a212db800602c2046b003254652582359208a208a49
648a204620686164b004254620686164525823658a592f20b00053586920
b000545821b040591b6920b000545821b0406559593a2db800612c2046b0
0425465258238a592046206a6164b0042546206a61645258238a592ffd2d
b800622c4b20b0032650585158b080441bb04044591b21212045b0c05058
b0c0441b2159592db800632c2020456944b001602020457d691844b00160
2db800642cb800632a2db800652c4b20b003265358b0401bb000598a8a20
b0032653582321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a
235920b0032653582321b801008a8a1b8a235920b0032653582321b80140
8a8a1b8a235920b80003265358b0032545b8018050582321b8018023211b
b003254523212321591b2159442db800662c4b535845441b2121592d0001
000000000000c63d4bb45f0f3cf500110800000000005f4d8f0000000000
dee02ed6f865fc270b9108f9000000090001000000000000000100000629
fe2900000c01f865fced0b910001000000000000000000000000000000c2
051200420000000000000000023900000000000000000000000000000000
000000000000000000000000000002aa008e02aa00440000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000005c700a50000000000000000000000000000000000000000
000000000000000000000000000000000000000006390050055600af0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000004730052047300760400003b0473003804730048000000000473003d
0000000001c70084000000000000000001c7008906aa0084047300840473
003b047300760000000002aa008904000042023900170473008000000000
05c700120000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000400001c00000035
0035003500350035003500350035003500350035007c00bd00bd00bd00bd
00bd00bd00bd00bd00bd00bd00bd00bd00bd00bd00bd00bd00bd00bd00bd
00bd00bd00bd00bd00bd00bd00bd00bd011e011e011e011e011e011e011e
011e011e011e011e019c01f201f201f201f201f201f201f201f201f201f2
01f201f201f201f201f201f201f202bc032503a7041304dc04dc05830583
05b005b005b005d1064d06a907210793079307d908b90908096209620a10
0a100a100a100a100a100a100a100a100a100a100a100a100a100a100a10
0a100a100a100a100a100a100a100a100a100a100a100a100a100a100a10
0a100a100a100a100a100a100a100a100a100a100a100a100a100a100a10
0a100a100a100a100a100a100a100a100a100a100a100a100a100a100a10
0a100a100a100a100a100a100a100a100a100a100a100a100a100a100a10
0a100a100a100a100a100a100a100a100a100a100a100a100a100a100a10
0a100a100a100a100a100a100a100a100a100a100a100a100a6800000001
000000c2006f0009006b00070002001000100067000007e80b9000040001
0000000100120003000104090002000e00000052006500670075006c0061
0072b8005d2b01ba000501b9005f2b01bf01bb003e00340029001d001200
0000652bbf01bc004200340029001d0012000000652bbf01bd003a003400
29001d0012000000652b00bf01b7004d003d003700280012000000652bbf
01b80060004f00370028001b000000652bbf01b90047003d0029001d0012
000000652bbf01ba004200340029001d0012000000652b00ba01be000400
642bb801b620457d691844b800532bb800492bb8003f2bb800352bb8002b
2b4118008001a6009001a600a001a600030069018b0079018b0089018b00
99018b00040089018b0099018b00a9018b00b9018bb2040840ba0179001a
014a400b041f5414191f180a0b1fd2b80106b49e1fd918e3bb0119000d00
e10119b20d0009410a01a0019f0064001f01a50025017a00480028019ab3
296c1f60410a01a9007001a9008001a90003008001a9000101a9b21e321f
be012c00250401001f0126001e0401b61fe7312d1fe531b80201b21fc227
b80401b21fc11eb80201400f1fc01d9e1fbf1d671fbe1d671fab27b80401
b21faa29b80401b61fa91d6c1f931eb8019ab21f921db80101b21f911db8
0101b21f751db80201b61f6d29961f6431b8019ab21f4c96b802abb21f39
1db80156400b1f3638211f351de41f2f27b80801400b1f2d1d4c1f2a31cd
1f241db802abb21f201eb8012540111f1c1d931f3a1d4c1f1e1d45273a1d
4527bb01aa019b002a019bb2254a1fba019b0025017ab349293896b8017b
b348283125b8017a403648289629482725294c1f252946272729482756c8
0784075b07410732072b072807260721071b071408120810080e080c080a
08080807b801acb23f1f06bb01ab003f001f01abb308060805b801aeb23f
1f04bb01ad003f001f01adb70804080208000814b8ffe0b40000010014b8
01abb41000000100b801abb606100000010006b801adb300000100b801ad
401f04000001000410000001001002000001000200000001000002010802
004a00b0018db806008516763f183f123e113946443e113946443e113946
443e113946443e113946443e11394660443e11394660443e11394660442b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b18011db0
964b5358b0aa1d59b0324b5358b0ff1d592b2b2b2b2b2b2b2b182b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74
752b2b2b65422b2b4b5279b376706a66456523456023456560234560b08b
766818b080622020b16a704565234520b003266062636820b003266165b0
70236544b06a234420b176664565234520b003266062636820b003266165
b066236544b0762344b10066455458b166406544b27640764523614459b3
6242725d456523456023456560234560b089766818b080622020b1724245
65234520b003266062636820b003266165b042236544b072234420b1625d
4565234520b003266062636820b003266165b05d236544b0622344b1005d
455458b15d406544b262406245236144592b2b2b2b456953427374b8019a
2045694b20b02853b049515a58b020615944b801a62045694475000000>
[5329 ] AllocGlyphStorage
]def
124 60
PrepFor2015
Type42DictEnd

1 0 3 <> KAAAAA+Helvetica AddT42Char
1 106 11 <0001008efe5e026105d50014003e4009141109131617171a09bb019c0008
0014019c400e400080044c10191516f7216c5218b80732852b2b4ef44ded
1add1aedd4ed4e456544e6003f3f3130010207061110171613232e012726
27263510373613025e9d2f475132937992462938160b5d3bbb05d5fecf90
dbfee1fedef094feeae47e6c94a8574f0128e7930125>KAAAAA+Helvetica AddT42Char
1 248 12 <00010044fe5e021705d500130036400c081100131517171a044c0f13bb01
9c00000009019c400908191415f7213f7b182b2b4ef44dedd4eddded4e45
6544e6003f3f3130131237361110272603331e01171e011510070603479f
2e46513293799a412630295e3bbafe5e01368ed701210121f0940116f673
657df471fed8e895fede>KAAAAA+Helvetica AddT42Char
1 378 39 <000200a50000056305bd000d00180067401f871196120232080b1e0f0200
1e17080831131a1a0d250e19191ad6217689182b2b4ef44dfd4e10f64ded
003ffd3ffd3130437940260116112515260607050704070307020705060a
10083201011608320109120b320107140032002b2b012b2b2a2b2b815d25
32373637363736351002232111032120171611140702290102d06541744a
3b1a0fd9f1fe9fc80253012fa795589bfe86fdafaa15276f598b53470111
012efb980513d7c2fed1eabdfeb2>KAAAAA+Helvetica AddT42Char
1 824 51 <000200af000004f805bd000a001400614035690c6912790c7a1204481458
1468147a140407081e1110100a010e0f1e0100020a080206120c04091414
31041a160f092500191516b8010bb3219589182b2b4ef44dfd3c4e10f64d
fd11121739003f3f3cfd3c1012392f3cfd3c015d31305d13213216151406
2321112300272623211121323635af0295c4f0d6defe32c70380784273fe
74018c86a705bdddc8acfffd9304b93a1ffe03729000>KAAAAA+Helvetica AddT42Char
1 996 68 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>KAAAAA+Helvetica AddT42Char
1 1400 69 <00020076ffde042505c20011001e0070402ea607a71cd71c0322080f1e02
050000171d0507110a1e1d0b0b1427081a201a2e102e01290011191f2087
21bd5d182b2b4ef43c4dfde4e44e10f64ded003fed3f3fed3f1139113931
30437940181216060a1606142601120a142601150717260113091e26002b
2b012b2b8181005d1333113e013332121114022322272627152324363534
26232206151417163376af3ba460c8f9f6da7a543239a6026691918d7bb9
2647c205c2fdeb4d51feedfef4fefeb03b234d897de8bea9deb6d1975eb1
>KAAAAA+Helvetica AddT42Char
1 1610 70 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>KAAAAA+Helvetica AddT42Char
1 1870 71 <00020038ffda03ed05c2000b001d00774032370e470e570ea704a91b0525
0814020f1d1000081d1d07130a021d170b052e132e102911121a1f0b271a
191e1f87217242182b2b4ef44ded4e10f63c4dfde4e4003fed3f3fed3f11
39113931304379401a181c090a000101180b2600091c0b26000019022600
0a1b0826012b2b012b2b818181005d121633323635342623220615001716
1711331123350e0123220035341233f692a17da1a67a88a9018a53303dad
a23fac6fb3fefaefde015fe8d7c9cbc3d0ca0237341e4b021dfa3e956358
012dfaea0157>KAAAAA+Helvetica AddT42Char
1 2086 72 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc00>KAAAAA+Helvetica AddT42Char
1 2488 74 <0003003dfe3b03e80449001f002d002e00b7404d36144908490958085909
880ca91ba81da927a62bb91b0b4008031622290ec40a221d1f070406291d
190a121d0a0f2e072e2e051c032e162e2d29051a300c0e270d3e26271c19
2f3087217242182b2b4ef44dedf4ed394e10f64dfde4f51112392f003f3f
ed3fed3f3fed10ed1112393931304379402c23281a1e0b1124251026231e
262600281a262600110b0e21000f0e0c0d251d222601271b2926000f0c12
2100002b2b2b01103c103c2b2b2b2b2b818181005d001716173533111407
06212226273316171633323736270e012322241110003300262322070615
1416333237363501027c5e3335a63c70fec9adec0eb70d273d83cf402603
36987daefefb0107ba0144a47fbe4625937cc24f2cfed104423e234387fc
32cc76da9ba548273c9256dd5250f7011d010d012efea1c0b25f9ab5bdaf
6384022d>KAAAAA+Helvetica AddT42Char
1 2822 76 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
>KAAAAA+Helvetica AddT42Char
1 2912 79 <000100890000013d05bd0003002940150000030a0517171a010229000319
0405aa216242182b2b4ef43c4dfd3c4e456544e6003f3f31301333112389
b4b405bdfa43>KAAAAA+Helvetica AddT42Char
1 2978 80 <0001008400000625044700260085403b0708070e060f1708170e170f2708
270e270f4819560b670b0c23250a1a1d23190a02041725211d171d0d0607
00061b1c2503130a2817171a112914b80101b21a291db80101400a00012e
25292600192728b8010db3216242182b2b4ef43c4dfde410f4edf4fd4e45
6544e6003f173c3f3f3c4deded111217390111123912393130005d133315
36373633321716173e013332171615112311342623220615112311342726
23220615112384b240345971804e2c243ca265d84e2abb6b4d6a99b71a29
7066a7b4042f984f243d3f244656539c548efd3702e86b508ea6fd9102bb
6d324b9ecffdc800>KAAAAA+Helvetica AddT42Char
1 3226 81 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>KAAAAA+Helvetica AddT42Char
1 3410 82 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>KAAAAA+Helvetica AddT42Char
1 3878 85 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>KAAAAA+Helvetica AddT42Char
1 4018 86 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>KAAAAA+Helvetica AddT42Char
1 4466 87 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c593>KAAAAA+Helvetica AddT42Char
1 4624 88 <00020080ffe303de044900170018005e403ab814c8140209130814191319
1428067703d707070800050e0a00060d0a051d120b180718180b160d2e0a
290c0b1a1a01291619191ad2216242182b2b4ef44ded4e10f63c4dfde411
12392f003f3fed3f3f3c391112393130005d015d01111417163332373635
11331123370607062322272635112501381a3083bc4425b4aa0223346793
e5532d01af042ffd39523460a85a9d020efbd19e3d2a5499528902d81a00
>KAAAAA+Helvetica AddT42Char
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb3>KAAAAA+Helvetica AddT42Char
KAAAAA+Helvetica /CharStrings get begin
/space 3 def
/parenleft 11 def
/parenright 12 def
/D 39 def
/P 51 def
/a 68 def
/b 69 def
/c 70 def
/d 71 def
/e 72 def
/g 74 def
/i 76 def
/l 79 def
/m 80 def
/n 81 def
/o 82 def
/r 85 def
/s 86 def
/t 87 def
/u 88 def
end
KAAAAA+Helvetica /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 68 /D put
dup 80 /P put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/RDZVIA+Helvetica /KAAAAA+Helvetica findfont ct_VMDictPut
/RDZVIA+Helvetica*1
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 26{/.notdef}rp /D 11{/.notdef}rp
/P 16{/.notdef}rp /a /b /c /d /e /.notdef
/g /.notdef /i 2{/.notdef}rp /l /m /n /o
2{/.notdef}rp /r /s /t /u 138{/.notdef}rp]
RDZVIA+Helvetica nf
RDZVIA+Helvetica*1 [8.03671 0 0 -8.03671 0 0 ]msf
426.922 30.3372 mo
(Dataset)sh
408.148 67.1721 mo
(Processing \(sub\)module)sh
2.00918 lw
10 ml
140.729 115.727 mo
154.124 115.727 li
160.754 115.727 li
@
165.274 115.727 mo
159.247 118.741 li
160.754 115.727 li
159.247 112.713 li
165.274 115.727 li
cp
f
165.274 115.727 mo
159.247 118.741 li
160.754 115.727 li
159.247 112.713 li
165.274 115.727 li
cp
@
222.201 211.498 mo
306.386 211.498 li
306.722 211.498 307.055 211.531 307.385 211.596 cv
307.715 211.662 308.036 211.759 308.346 211.888 cv
308.657 212.017 308.952 212.175 309.232 212.361 cv
309.512 212.548 309.771 212.761 310.008 212.999 cv
310.246 213.237 310.459 213.495 310.646 213.775 cv
310.833 214.055 310.99 214.35 311.119 214.661 cv
311.248 214.972 311.345 215.292 311.411 215.622 cv
311.476 215.952 311.509 216.285 311.509 216.621 cv
311.509 240.531 li
311.509 240.867 311.476 241.2 311.411 241.53 cv
311.345 241.86 311.248 242.181 311.119 242.491 cv
310.99 242.802 310.833 243.097 310.646 243.377 cv
310.459 243.657 310.246 243.916 310.008 244.153 cv
309.771 244.391 309.512 244.604 309.232 244.791 cv
308.952 244.978 308.657 245.135 308.346 245.264 cv
308.036 245.393 307.715 245.49 307.385 245.556 cv
307.055 245.621 306.722 245.654 306.386 245.654 cv
222.201 245.654 li
221.865 245.654 221.532 245.621 221.202 245.556 cv
220.872 245.49 220.551 245.393 220.24 245.264 cv
219.93 245.135 219.634 244.977 219.355 244.791 cv
219.075 244.604 218.816 244.391 218.578 244.153 cv
218.34 243.916 218.128 243.657 217.941 243.377 cv
217.754 243.097 217.596 242.802 217.468 242.491 cv
217.339 242.181 217.242 241.86 217.176 241.53 cv
217.111 241.2 217.078 240.867 217.078 240.531 cv
217.078 216.621 li
217.078 216.285 217.111 215.952 217.176 215.622 cv
217.242 215.292 217.339 214.972 217.468 214.661 cv
217.596 214.35 217.754 214.055 217.941 213.775 cv
218.128 213.495 218.34 213.237 218.578 212.999 cv
218.816 212.761 219.075 212.548 219.355 212.361 cv
219.634 212.175 219.93 212.017 220.24 211.888 cv
220.551 211.759 220.872 211.662 221.202 211.596 cv
221.532 211.531 221.865 211.498 222.201 211.498 cv
cp
.0274357 .0173037 .0173037 0 cmyk
f
.669726 lw
4 ml
222.201 211.498 mo
306.386 211.498 li
306.722 211.498 307.055 211.531 307.385 211.596 cv
307.715 211.662 308.036 211.759 308.346 211.888 cv
308.657 212.017 308.952 212.175 309.232 212.361 cv
309.512 212.548 309.771 212.761 310.008 212.999 cv
310.246 213.237 310.459 213.495 310.646 213.775 cv
310.833 214.055 310.99 214.35 311.119 214.661 cv
311.248 214.972 311.345 215.292 311.411 215.622 cv
311.476 215.952 311.509 216.285 311.509 216.621 cv
311.509 240.531 li
311.509 240.867 311.476 241.2 311.411 241.53 cv
311.345 241.86 311.248 242.181 311.119 242.491 cv
310.99 242.802 310.833 243.097 310.646 243.377 cv
310.459 243.657 310.246 243.916 310.008 244.153 cv
309.771 244.391 309.512 244.604 309.232 244.791 cv
308.952 244.978 308.657 245.135 308.346 245.264 cv
308.036 245.393 307.715 245.49 307.385 245.556 cv
307.055 245.621 306.722 245.654 306.386 245.654 cv
222.201 245.654 li
221.865 245.654 221.532 245.621 221.202 245.556 cv
220.872 245.49 220.551 245.393 220.24 245.264 cv
219.93 245.135 219.634 244.977 219.355 244.791 cv
219.075 244.604 218.816 244.391 218.578 244.153 cv
218.34 243.916 218.128 243.657 217.941 243.377 cv
217.754 243.097 217.596 242.802 217.468 242.491 cv
217.339 242.181 217.242 241.86 217.176 241.53 cv
217.111 241.2 217.078 240.867 217.078 240.531 cv
217.078 216.621 li
217.078 216.285 217.111 215.952 217.176 215.622 cv
217.242 215.292 217.339 214.972 217.468 214.661 cv
217.596 214.35 217.754 214.055 217.941 213.775 cv
218.128 213.495 218.34 213.237 218.578 212.999 cv
218.816 212.761 219.075 212.548 219.355 212.361 cv
219.634 212.175 219.93 212.017 220.24 211.888 cv
220.551 211.759 220.872 211.662 221.202 211.596 cv
221.532 211.531 221.865 211.498 222.201 211.498 cv
cp
.597711 .511803 .507713 .201297 cmyk
@
.694331 .632349 .621027 .583551 cmyk
%ADOBeginSubsetFont: HAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RDZVHY+Helvetica gcheck setglobal} if
1 2104 49 <0002009c0000052a05bd0009000a00764014370138060207011701270147
0158020507010202b8019b4017120606070207080301020806080a030a0a
010608020302b8019bb505041a0c0708b8019b400a0900190b0ca0217670
182b2b4ef43c4dfd3c4e10f63c4dfd3c11123939392f003f3f3c3f3c1239
3904872e2b877dc53130005d015d13330111331123011123019ceb02e6bd
dffd0fbe023a05bdfb5a04a6fa4304a5fb5b05bd>RDZVHY+Helvetica AddT42Char
1 5144 78 <00010080000003f805bd000b00a740645902013a08011902010706170657
056705790678078705b903c903da030a05050608080709030284029402a4
020302391209090405060504066d12070708080705040305060908050204
030a00000403060a07060a061a0d09020a29000b190c0db22162b9011600
182b2b4ef43c4dfd3c3c194e10e618003f3c3c3f3c3f1112173901121739
874d2e2b087d10c104872e182b5d057d10c010083c083c3130015d00715d
7213331101330901230107112380ad01cee6fe6601b1e6feb297ad05bdfc
ab01c7fe6ffd62021c8afe6e>RDZVHY+Helvetica AddT42Char
1 7258 89 <0001000b000003ea042f00060102402e4201c50102006700680268036706
87048805a700a802084700480245044a0586048905c704c8050849287328
0708b80109b321677e182b2b4b5279b8ff70b40105042004b80183b70303
6d1202010205b80183401e06066d12000001050604030101050203060300
0605040a0817171a03af02ba018400000184b301af0619194ef4184dfde0
e0fd194e456544e618003f3c3f173c1239011112391239074d2e2b104ee4
4d072e2b104ee44d2b4b5179402502291203030400291206060501050203
0603000605040a0817171a020403af050001af0619194ef4184dfd3939fd
3939194e456544e618003f3c3f173c12390507102b07102b313001715d00
5d7113090133012301dc011e012bc5fe6cc0fe75042ffc980368fbd1042f
>RDZVHY+Helvetica AddT42Char
1 7558 90 <00010012000005a1042f000c0120407e4704aa09028e09014607490b8703
8a08850aca02c403c607c908c60ac90b0b66076a08650a690b7607790876
0a790b85078a0b0a4607490b0247037700780503572816282b012b043b01
3b048f018f0406090401030b020305060c050006080a0b03070a0e17171a
0705069b080304c40a0209c40b00019b0c190d677e182b194e10f4184dfd
3939fd3939fd3939fd3939194e456544e618003f173c3f173c1217395d4b
5179400c0529120607060029120c0c0b0587102b87102b4b5279b4090a09
080ab8018b401312010102070604050529120606070908090a08b8018b40
0e120404030b0c00010029120c0c0b01874d2e2b87107dc41805872e182b
087d10c505872e182b877d10c405872e182b087d10c53130015d71717100
715d1b02331b013301230b012301d7ced1cad2dbb4fec9bbdad3bbfecb04
2ffcb4034cfcb90347fbd1033dfcc3042f00>RDZVHY+Helvetica AddT42Char
1 8002 92 <00020015fe4903e804490018001900ca406e8a158818a718030706170638
12481258126707770377078c1498009705981597169717a800a816104800
4b154717c915044405c605028705a600a601a705a8170524280518151716
010006150c0b0f1d080e19071919161b17171a050001af171518af0c8f16
191a1bd421677e182b2b194ef44de418fd3939fd3939194e456544e61812
392f003f3f4dfd3932192f183f3c3c3c123939014b527940121515001616
6d121717180501016d12000018872e2b107dc418872e2b10087dc418015d
71313071015d005d013306030207020623222627351e01333236373e0137
013301030321c7268362429c809c26291e2f2a10322f10053e0efe74cc01
1f01042f67fe91feecaefe66b40608a40d062118089424044efc98038200
>RDZVHY+Helvetica AddT42Char
RDZVHY+Helvetica /CharStrings get begin
/N 49 def
/k 78 def
/v 89 def
/w 90 def
/y 92 def
end
RDZVHY+Helvetica /Encoding get
dup 78 /N put
dup 107 /k put
dup 118 /v put
dup 119 /w put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RDZVHY+Helvetica*1
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 25{/.notdef}rp /C 4{/.notdef}rp
/H /I 4{/.notdef}rp /N /.notdef /P 2{/.notdef}rp /S
13{/.notdef}rp /a /.notdef /c /.notdef /e /f /g
/h /i /.notdef /k /l /m /n /o
/p /.notdef /r /s /t /.notdef /v /w
/x /y /z 133{/.notdef}rp]
RDZVHY+Helvetica nf
RDZVHY+Helvetica*1 [10.7156 0 0 -10.7156 0 0 ]msf
221.075 225.227 mo
(Network Inversion)sh
231.791 238.622 mo
(\(if necessary\))sh
388.762 200.782 mo
526.257 200.782 li
527.24 200.782 528.213 200.878 529.177 201.07 cv
530.141 201.262 531.077 201.546 531.985 201.922 cv
532.893 202.298 533.756 202.759 534.573 203.305 cv
535.39 203.851 536.146 204.472 536.841 205.167 cv
537.536 205.862 538.156 206.618 538.702 207.435 cv
539.248 208.252 539.709 209.115 540.086 210.023 cv
540.462 210.931 540.746 211.867 540.937 212.831 cv
541.129 213.795 541.225 214.768 541.225 215.751 cv
541.225 285.603 li
541.225 286.586 541.129 287.559 540.937 288.523 cv
540.746 289.487 540.462 290.423 540.086 291.331 cv
539.709 292.239 539.248 293.102 538.702 293.919 cv
538.156 294.736 537.536 295.492 536.841 296.187 cv
536.146 296.882 535.39 297.503 534.573 298.049 cv
533.756 298.595 532.893 299.056 531.985 299.432 cv
531.077 299.808 530.141 300.092 529.177 300.284 cv
528.213 300.476 527.24 300.572 526.257 300.572 cv
388.762 300.572 li
387.779 300.572 386.806 300.476 385.842 300.284 cv
384.878 300.092 383.942 299.808 383.034 299.432 cv
382.126 299.056 381.263 298.595 380.446 298.049 cv
379.629 297.503 378.873 296.882 378.178 296.187 cv
377.483 295.492 376.862 294.736 376.316 293.919 cv
375.77 293.102 375.309 292.239 374.933 291.331 cv
374.557 290.423 374.273 289.487 374.081 288.523 cv
373.89 287.559 373.794 286.586 373.794 285.603 cv
373.794 215.751 li
373.794 214.768 373.89 213.795 374.081 212.831 cv
374.273 211.867 374.557 210.931 374.933 210.023 cv
375.309 209.115 375.77 208.252 376.316 207.435 cv
376.862 206.618 377.483 205.862 378.178 205.167 cv
378.873 204.472 379.629 203.851 380.446 203.305 cv
381.263 202.759 382.126 202.298 383.034 201.922 cv
383.942 201.546 384.878 201.262 385.842 201.07 cv
386.806 200.878 387.779 200.782 388.762 200.782 cv
cp
0 0 0 0 cmyk
f
388.762 200.782 mo
526.257 200.782 li
527.24 200.782 528.213 200.878 529.177 201.07 cv
530.141 201.262 531.077 201.546 531.985 201.922 cv
532.893 202.298 533.756 202.759 534.573 203.305 cv
535.39 203.851 536.146 204.472 536.841 205.167 cv
537.536 205.862 538.156 206.618 538.702 207.435 cv
539.248 208.252 539.709 209.115 540.086 210.023 cv
540.462 210.931 540.746 211.867 540.937 212.831 cv
541.129 213.795 541.225 214.768 541.225 215.751 cv
541.225 285.603 li
541.225 286.586 541.129 287.559 540.937 288.523 cv
540.746 289.487 540.462 290.423 540.086 291.331 cv
539.709 292.239 539.248 293.102 538.702 293.919 cv
538.156 294.736 537.536 295.492 536.841 296.187 cv
536.146 296.882 535.39 297.503 534.573 298.049 cv
533.756 298.595 532.893 299.056 531.985 299.432 cv
531.077 299.808 530.141 300.092 529.177 300.284 cv
528.213 300.476 527.24 300.572 526.257 300.572 cv
388.762 300.572 li
387.779 300.572 386.806 300.476 385.842 300.284 cv
384.878 300.092 383.942 299.808 383.034 299.432 cv
382.126 299.056 381.263 298.595 380.446 298.049 cv
379.629 297.503 378.873 296.882 378.178 296.187 cv
377.483 295.492 376.862 294.736 376.316 293.919 cv
375.77 293.102 375.309 292.239 374.933 291.331 cv
374.557 290.423 374.273 289.487 374.081 288.523 cv
373.89 287.559 373.794 286.586 373.794 285.603 cv
373.794 215.751 li
373.794 214.768 373.89 213.795 374.081 212.831 cv
374.273 211.867 374.557 210.931 374.933 210.023 cv
375.309 209.115 375.77 208.252 376.316 207.435 cv
376.862 206.618 377.483 205.862 378.178 205.167 cv
378.873 204.472 379.629 203.851 380.446 203.305 cv
381.263 202.759 382.126 202.298 383.034 201.922 cv
383.942 201.546 384.878 201.262 385.842 201.07 cv
386.806 200.878 387.779 200.782 388.762 200.782 cv
cp
.749722 .679194 .670497 .901457 cmyk
@
%ADOBeginSubsetFont: GAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RDZVHX+Helvetica gcheck setglobal} if
1 448 56 <000200aaffd9052f05bd00150016003c4023170527053810030a0002053a
1009160316161409250c1a18012514191718a0219570182b2b4ef44ded4e
10f64ded12392f003f3fed3f3c5d31300111141716333237363511331110
07022120032619012101743c59d3fd5b31ca4986fe8cfe8c8549024305bd
fc74a06aa0ad5e9f038cfcc7fef192fef6010a92010f0339>RDZVHX+Helvetica AddT42Char
1 3134 83 <00020076fe5504250449000e00220074402ca908a717022808201c110e06
1d15070f060e1d1c0b220e0227181a240a2e102e2129220f1923248721bd
5d182b2b4ef43c4dfde4e44e10f64ded003f3fed3f3fed11391239313043
79401c161b00051a260426001b022601051602260101190e260003170626
012b2b012b2b2b2b8181005d243635342726232207061514171633013315
363736333212111007062322272627112302c6a72546babb45252546bafe
2eaf36405b7bb6feb7749a7952303bb479d3d2805cb1bb649a7c57a603b1
8e49283cfee9fefdfea2965f351e49fddd00>RDZVHX+Helvetica AddT42Char
1 3950 90 <00010012000005a1042f000c0120407e4704aa09028e09014607490b8703
8a08850aca02c403c607c908c60ac90b0b66076a08650a690b7607790876
0a790b85078a0b0a4607490b0247037700780503572816282b012b043b01
3b048f018f0406090401030b020305060c050006080a0b03070a0e17171a
0705069b080304c40a0209c40b00019b0c190d677e182b194e10f4184dfd
3939fd3939fd3939fd3939194e456544e618003f173c3f173c1217395d4b
5179400c0529120607060029120c0c0b0587102b87102b4b5279b4090a09
080ab8018b401312010102070604050529120606070908090a08b8018b40
0e120404030b0c00010029120c0c0b01874d2e2b87107dc41805872e182b
087d10c505872e182b877d10c405872e182b087d10c53130015d71717100
715d1b02331b013301230b012301d7ced1cad2dbb4fec9bbdad3bbfecb04
2ffcb4034cfcb90347fbd1033dfcc3042f00>RDZVHX+Helvetica AddT42Char

1 0 172 <> RDZVHX+Helvetica AddT42Char
RDZVHX+Helvetica /CharStrings get begin
/U 56 def
/p 83 def
/w 90 def
/nobreakspace 172 def
end
RDZVHX+Helvetica /Encoding get
dup 85 /U put
dup 112 /p put
dup 119 /w put
dup 202 /nobreakspace put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RDZVHX+Helvetica*1
[32{/.notdef}rp /space 43{/.notdef}rp /L 3{/.notdef}rp /P 3{/.notdef}rp /T
/U 11{/.notdef}rp /a /.notdef /c /.notdef /e /.notdef
/g /h /i /.notdef /k /.notdef /m /n
/o /p /.notdef /r /s 3{/.notdef}rp /w 82{/.notdef}rp
/nobreakspace 53{/.notdef}rp]
RDZVHX+Helvetica nf
RDZVHX+Helvetica*1 [12.0551 0 0 -12.0551 0 0 ]msf
374.798 255.365 mo
(\312 Unwrapping)sh
439.46 207.48 mo
533.155 207.48 li
533.515 207.48 533.861 207.549 534.193 207.686 cv
534.525 207.824 534.818 208.02 535.073 208.274 cv
535.327 208.528 535.523 208.822 535.661 209.154 cv
535.798 209.486 535.867 209.832 535.867 210.192 cv
535.867 222.85 li
535.867 223.21 535.798 223.556 535.661 223.888 cv
535.523 224.22 535.327 224.513 535.073 224.768 cv
534.818 225.022 534.525 225.218 534.193 225.356 cv
533.861 225.493 533.515 225.562 533.155 225.562 cv
439.46 225.562 li
439.101 225.562 438.755 225.493 438.422 225.356 cv
438.09 225.218 437.797 225.022 437.542 224.768 cv
437.288 224.513 437.092 224.22 436.954 223.888 cv
436.817 223.556 436.748 223.21 436.748 222.85 cv
436.748 210.192 li
436.748 209.832 436.817 209.486 436.954 209.154 cv
437.092 208.822 437.288 208.528 437.542 208.274 cv
437.797 208.02 438.09 207.824 438.422 207.686 cv
438.755 207.549 439.101 207.48 439.46 207.48 cv
cp
.0274357 .0173037 .0173037 0 cmyk
f
439.46 207.48 mo
533.155 207.48 li
533.515 207.48 533.861 207.549 534.193 207.686 cv
534.525 207.824 534.818 208.02 535.073 208.274 cv
535.327 208.528 535.523 208.822 535.661 209.154 cv
535.798 209.486 535.867 209.832 535.867 210.192 cv
535.867 222.85 li
535.867 223.21 535.798 223.556 535.661 223.888 cv
535.523 224.22 535.327 224.513 535.073 224.768 cv
534.818 225.022 534.525 225.218 534.193 225.356 cv
533.861 225.493 533.515 225.562 533.155 225.562 cv
439.46 225.562 li
439.101 225.562 438.755 225.493 438.422 225.356 cv
438.09 225.218 437.797 225.022 437.542 224.768 cv
437.288 224.513 437.092 224.22 436.954 223.888 cv
436.817 223.556 436.748 223.21 436.748 222.85 cv
436.748 210.192 li
436.748 209.832 436.817 209.486 436.954 209.154 cv
437.092 208.822 437.288 208.528 437.542 208.274 cv
437.797 208.02 438.09 207.824 438.422 207.686 cv
438.755 207.549 439.101 207.48 439.46 207.48 cv
cp
.597711 .511803 .507713 .201297 cmyk
@
.694331 .632349 .621027 .583551 cmyk
%ADOBeginSubsetFont: HAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RDZVHY+Helvetica gcheck setglobal} if
1 378 16 <0001005501de024b029700030020400a002f03011a0500190405b80142b3
21ba48182b2b4ee410e6002f4ded3130132115215501f6fe0a0297b9>RDZVHY+Helvetica AddT42Char
RDZVHY+Helvetica /CharStrings get begin
/hyphen 16 def
end
RDZVHY+Helvetica /Encoding get
dup 45 /hyphen put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RDZVHY+Helvetica*1
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 21{/.notdef}rp
/C 4{/.notdef}rp /H /I 4{/.notdef}rp /N /.notdef /P
2{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef /e
/f /g /h /i /.notdef /k /l /m
/n /o /p /.notdef /r /s /t /.notdef
/v /w /x /y /z 133{/.notdef}rp]
RDZVHY+Helvetica nf
RDZVHY+Helvetica*1 [10.7156 0 0 -10.7156 0 0 ]msf
449.933 219.87 mo
(Pre-processing)sh
441.235 273.113 mo
531.38 273.113 li
531.753 273.113 532.112 273.184 532.457 273.327 cv
532.801 273.47 533.105 273.673 533.369 273.937 cv
533.633 274.2 533.836 274.505 533.979 274.849 cv
534.122 275.194 534.193 275.553 534.193 275.926 cv
534.193 289.052 li
534.193 289.425 534.122 289.784 533.979 290.129 cv
533.836 290.473 533.633 290.778 533.369 291.041 cv
533.105 291.305 532.801 291.508 532.457 291.651 cv
532.112 291.794 531.753 291.865 531.38 291.865 cv
441.235 291.865 li
440.862 291.865 440.503 291.794 440.159 291.651 cv
439.814 291.508 439.51 291.305 439.246 291.041 cv
438.982 290.778 438.779 290.473 438.636 290.129 cv
438.494 289.784 438.422 289.425 438.422 289.052 cv
438.422 275.926 li
438.422 275.553 438.494 275.194 438.636 274.849 cv
438.779 274.505 438.982 274.2 439.246 273.937 cv
439.51 273.673 439.814 273.47 440.159 273.327 cv
440.503 273.184 440.862 273.113 441.235 273.113 cv
cp
.0274357 .0173037 .0173037 0 cmyk
f
441.235 273.113 mo
531.38 273.113 li
531.753 273.113 532.112 273.184 532.457 273.327 cv
532.801 273.47 533.105 273.673 533.369 273.937 cv
533.633 274.2 533.836 274.505 533.979 274.849 cv
534.122 275.194 534.193 275.553 534.193 275.926 cv
534.193 289.052 li
534.193 289.425 534.122 289.784 533.979 290.129 cv
533.836 290.473 533.633 290.778 533.369 291.041 cv
533.105 291.305 532.801 291.508 532.457 291.651 cv
532.112 291.794 531.753 291.865 531.38 291.865 cv
441.235 291.865 li
440.862 291.865 440.503 291.794 440.159 291.651 cv
439.814 291.508 439.51 291.305 439.246 291.041 cv
438.982 290.778 438.779 290.473 438.636 290.129 cv
438.494 289.784 438.422 289.425 438.422 289.052 cv
438.422 275.926 li
438.422 275.553 438.494 275.194 438.636 274.849 cv
438.779 274.505 438.982 274.2 439.246 273.937 cv
439.51 273.673 439.814 273.47 440.159 273.327 cv
440.503 273.184 440.862 273.113 441.235 273.113 cv
cp
.597711 .511803 .507713 .201297 cmyk
@
.694331 .632349 .621027 .583551 cmyk
RDZVHY+Helvetica*1 [10.7156 0 0 -10.7156 0 0 ]msf
447.893 285.503 mo
(Post-processing)sh
458.146 232.929 mo
514.47 232.929 li
514.819 232.929 515.165 232.963 515.508 233.032 cv
515.851 233.1 516.184 233.201 516.507 233.335 cv
516.83 233.468 517.137 233.632 517.428 233.827 cv
517.718 234.021 517.987 234.242 518.234 234.489 cv
518.482 234.736 518.702 235.005 518.896 235.296 cv
519.091 235.586 519.255 235.893 519.389 236.216 cv
519.522 236.539 519.623 236.872 519.692 237.215 cv
519.76 237.558 519.794 237.904 519.794 238.254 cv
519.794 263.1 li
519.794 263.45 519.76 263.796 519.692 264.139 cv
519.623 264.482 519.522 264.815 519.388 265.138 cv
519.255 265.461 519.091 265.768 518.896 266.058 cv
518.702 266.349 518.482 266.618 518.234 266.865 cv
517.987 267.113 517.718 267.333 517.428 267.527 cv
517.137 267.722 516.83 267.886 516.507 268.019 cv
516.184 268.153 515.851 268.254 515.508 268.322 cv
515.165 268.391 514.819 268.425 514.47 268.425 cv
458.146 268.425 li
457.796 268.425 457.45 268.391 457.107 268.322 cv
456.764 268.254 456.431 268.153 456.108 268.019 cv
455.785 267.886 455.478 267.722 455.188 267.527 cv
454.897 267.333 454.628 267.113 454.381 266.865 cv
454.134 266.618 453.913 266.349 453.719 266.058 cv
453.524 265.768 453.36 265.461 453.226 265.138 cv
453.093 264.815 452.992 264.482 452.924 264.139 cv
452.855 263.796 452.821 263.45 452.821 263.1 cv
452.821 238.254 li
452.821 237.904 452.855 237.558 452.924 237.215 cv
452.992 236.872 453.093 236.539 453.226 236.216 cv
453.36 235.893 453.524 235.586 453.719 235.296 cv
453.913 235.005 454.134 234.736 454.381 234.489 cv
454.628 234.242 454.897 234.021 455.188 233.827 cv
455.478 233.632 455.785 233.468 456.108 233.335 cv
456.431 233.201 456.764 233.1 457.107 233.032 cv
457.45 232.963 457.796 232.929 458.146 232.929 cv
cp
0 0 0 0 cmyk
f
458.146 232.929 mo
514.47 232.929 li
514.819 232.929 515.165 232.963 515.508 233.032 cv
515.851 233.1 516.184 233.201 516.507 233.335 cv
516.83 233.468 517.137 233.632 517.428 233.827 cv
517.718 234.021 517.987 234.242 518.234 234.489 cv
518.482 234.736 518.702 235.005 518.896 235.296 cv
519.091 235.586 519.255 235.893 519.389 236.216 cv
519.522 236.539 519.623 236.872 519.692 237.215 cv
519.76 237.558 519.794 237.904 519.794 238.254 cv
519.794 263.1 li
519.794 263.45 519.76 263.796 519.692 264.139 cv
519.623 264.482 519.522 264.815 519.388 265.138 cv
519.255 265.461 519.091 265.768 518.896 266.058 cv
518.702 266.349 518.482 266.618 518.234 266.865 cv
517.987 267.113 517.718 267.333 517.428 267.527 cv
517.137 267.722 516.83 267.886 516.507 268.019 cv
516.184 268.153 515.851 268.254 515.508 268.322 cv
515.165 268.391 514.819 268.425 514.47 268.425 cv
458.146 268.425 li
457.796 268.425 457.45 268.391 457.107 268.322 cv
456.764 268.254 456.431 268.153 456.108 268.019 cv
455.785 267.886 455.478 267.722 455.188 267.527 cv
454.897 267.333 454.628 267.113 454.381 266.865 cv
454.134 266.618 453.913 266.349 453.719 266.058 cv
453.524 265.768 453.36 265.461 453.226 265.138 cv
453.093 264.815 452.992 264.482 452.924 264.139 cv
452.855 263.796 452.821 263.45 452.821 263.1 cv
452.821 238.254 li
452.821 237.904 452.855 237.558 452.924 237.215 cv
452.992 236.872 453.093 236.539 453.226 236.216 cv
453.36 235.893 453.524 235.586 453.719 235.296 cv
453.913 235.005 454.134 234.736 454.381 234.489 cv
454.628 234.242 454.897 234.021 455.188 233.827 cv
455.478 233.632 455.785 233.468 456.108 233.335 cv
456.431 233.201 456.764 233.1 457.107 233.032 cv
457.45 232.963 457.796 232.929 458.146 232.929 cv
cp
.749722 .679194 .670497 .901457 cmyk
@
%ADOBeginSubsetFont: HAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RDZVHY+Helvetica gcheck setglobal} if
1 436 18 <000100000000026a05bd0003002b4017070117019701030102021c120303
0002030a0100020003192f18d4003f3c3f3c05872e2b7d10c4015d013301
2301d298fe2e9805bdfa4300>RDZVHY+Helvetica AddT42Char
1 508 21 <000100400000041e059d002200a6404e3604460457056b1d6e1e7a1e8401
8702082a085a196b197c197c1cb519050022010f041c0e1921071c190401
00051f0f0f22130a351305201f7521220c217f0738166f220e270f811f38
222447231076c418d4edf4ed10f5ede4003f3cfd3c3fed1112392f121739
0111123912393911391239005d31304379401c04190c2511260b120e2800
091407280119040d100a280108150a2801002b2b1010012b2b2b2b81005d
36123f01363736353426232207060723363736213212151407060f010607
06072115214a85c1c0813452967db9472604b70342750128f6e37946b589
6238641a030efc29b90112706f4b35536b7d938c4b85bb76d0fef6a3ac7a
47654c3631576aaa>RDZVHY+Helvetica AddT42Char
1 786 22 <00010031ffd9041a059a003100c4401f490c532d6529632d7529752d0696
26014b082b0a182b140d03f93114350d20b8012340141135107f0d0d311b
3524050735310d1896274411b8014a400f0a382e6f021f29208103270233
47321076c418d4edf4ed10f5ededf4ed003fed3fed12392ff4fde610ed10
ed111239011112393130437940362f301926000905261d25222606000328
00040308300a28011c231f28001a251828010401072800092f0728001e21
1b280119261b2801002b2b2b2b012b2b2b103c2b2b2b2b818181005d015d
0402353316171633323635342623220607351e0133323736353426232207
06072334373621321615140706071e01151400230116e5bc0c2846b78eac
b5a11225131c26166541729865b4452605b2406e0115dbf0472c46717ffe
f2f8270117c88b3f719878947601019f03022038906b7478427aa070c8c3
b98452331d1fb180cdfefe00>RDZVHY+Helvetica AddT42Char
1 1538 39 <000200a50000056305bd000d00180067401f871196120232080b1e0f0200
1e17080831131a1a0d250e19191ad6217689182b2b4ef44dfd4e10f64ded
003ffd3ffd3130437940260116112515260607050704070307020705060a
10083201011608320109120b320107140032002b2b012b2b2a2b2b815d25
32373637363736351002232111032120171611140702290102d06541744a
3b1a0fd9f1fe9fc80253012fa795589bfe86fdafaa15276f598b53470111
012efb980513d7c2fed1eabdfeb2>RDZVHY+Helvetica AddT42Char
1 7078 88 <00020080ffe303de044900170018005e403ab814c8140209130814191319
1428067703d707070800050e0a00060d0a051d120b180718180b160d2e0a
290c0b1a1a01291619191ad2216242182b2b4ef44ded4e10f63c4dfde411
12392f003f3fed3f3f3c391112393130005d015d01111417163332373635
11331123370607062322272635112501381a3083bc4425b4aa0223346793
e5532d01af042ffd39523460a85a9d020efbd19e3d2a5499528902d81a00
>RDZVHY+Helvetica AddT42Char
RDZVHY+Helvetica /CharStrings get begin
/slash 18 def
/two 21 def
/three 22 def
/D 39 def
/u 88 def
end
RDZVHY+Helvetica /Encoding get
dup 47 /slash put
dup 50 /two put
dup 51 /three put
dup 68 /D put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RDZVHY+Helvetica*1
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /.notdef
/slash 2{/.notdef}rp /two /three 15{/.notdef}rp /C /D 3{/.notdef}rp
/H /I 4{/.notdef}rp /N /.notdef /P 2{/.notdef}rp /S
13{/.notdef}rp /a /.notdef /c /.notdef /e /f /g
/h /i /.notdef /k /l /m /n /o
/p /.notdef /r /s /t /u /v /w
/x /y /z 133{/.notdef}rp]
RDZVHY+Helvetica nf
RDZVHY+Helvetica*1 [10.7156 0 0 -10.7156 0 0 ]msf
467.806 247.328 mo
(2D / 3D)sh
458.263 260.723 mo
(unwrapping)sh
222.134 267.755 mo
306.453 267.755 li
306.946 267.755 307.42 267.849 307.875 268.038 cv
308.33 268.227 308.732 268.495 309.081 268.844 cv
309.429 269.192 309.698 269.594 309.887 270.05 cv
310.075 270.505 310.17 270.979 310.17 271.472 cv
310.17 288.818 li
310.17 289.311 310.075 289.785 309.887 290.24 cv
309.698 290.696 309.429 291.098 309.081 291.446 cv
308.732 291.795 308.33 292.063 307.875 292.252 cv
307.42 292.441 306.946 292.535 306.453 292.535 cv
222.134 292.535 li
221.641 292.535 221.167 292.441 220.712 292.252 cv
220.256 292.063 219.854 291.795 219.506 291.446 cv
219.157 291.098 218.889 290.696 218.7 290.24 cv
218.511 289.785 218.417 289.311 218.417 288.818 cv
218.417 271.472 li
218.417 270.979 218.512 270.505 218.7 270.05 cv
218.889 269.594 219.157 269.192 219.506 268.844 cv
219.854 268.495 220.256 268.227 220.712 268.038 cv
221.167 267.849 221.641 267.755 222.134 267.755 cv
cp
0 0 0 0 cmyk
f
222.134 267.755 mo
306.453 267.755 li
306.946 267.755 307.42 267.849 307.875 268.038 cv
308.33 268.227 308.732 268.495 309.081 268.844 cv
309.429 269.192 309.698 269.594 309.887 270.05 cv
310.075 270.505 310.17 270.979 310.17 271.472 cv
310.17 288.818 li
310.17 289.311 310.075 289.785 309.887 290.24 cv
309.698 290.696 309.429 291.098 309.081 291.446 cv
308.732 291.795 308.33 292.063 307.875 292.252 cv
307.42 292.441 306.946 292.535 306.453 292.535 cv
222.134 292.535 li
221.641 292.535 221.167 292.441 220.712 292.252 cv
220.256 292.063 219.854 291.795 219.506 291.446 cv
219.157 291.098 218.889 290.696 218.7 290.24 cv
218.511 289.785 218.417 289.311 218.417 288.818 cv
218.417 271.472 li
218.417 270.979 218.512 270.505 218.7 270.05 cv
218.889 269.594 219.157 269.192 219.506 268.844 cv
219.854 268.495 220.256 268.227 220.712 268.038 cv
221.167 267.849 221.641 267.755 222.134 267.755 cv
cp
.749722 .679194 .670497 .901457 cmyk
@
%ADOBeginSubsetFont: HAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RDZVHY+Helvetica gcheck setglobal} if
1 1732 40 <000200af000004ed05bd000b000c004e4024071e04040b031e0100020908
1e0a0b080c020c0c02000669023b091a0e03082500190d0eb8010bb32195
89182b2b4ef44dfd3c4e10f64df4e41112392f003f3f3cfd3c3f3ced1239
2ffd313013211521112115211121152101af042ffc93032bfcd5037cfbc2
021f05bdb4fe42aafe0eaf05bd00>RDZVHY+Helvetica AddT42Char
RDZVHY+Helvetica /CharStrings get begin
/E 40 def
end
RDZVHY+Helvetica /Encoding get
dup 69 /E put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RDZVHY+Helvetica*1
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /.notdef
/slash 2{/.notdef}rp /two /three 15{/.notdef}rp /C /D /E
2{/.notdef}rp /H /I 4{/.notdef}rp /N /.notdef /P 2{/.notdef}rp
/S 13{/.notdef}rp /a /.notdef /c /.notdef /e /f
/g /h /i /.notdef /k /l /m /n
/o /p /.notdef /r /s /t /u /v
/w /x /y /z 133{/.notdef}rp]
RDZVHY+Helvetica nf
RDZVHY+Helvetica*1 [10.7156 0 0 -10.7156 0 0 ]msf
222.258 276.796 mo
(Estimate average)sh
246.085 290.191 mo
(velocity)sh
RDZVHZ+Helvetica*1 [8.0325 0 0 -8.0325 0 0 ]msf
88.8201 261.39 mo
(-)sh
90.1982 249.672 mo
144.808 275.892 li
144.808 281.049 li
90.1982 307.269 li
35.582 281.049 li
35.582 275.892 li
90.1982 249.672 li
cp
0 0 0 0 cmyk
f
10 ml
90.1982 249.672 mo
144.808 275.892 li
144.808 281.049 li
90.1982 307.269 li
35.582 281.049 li
35.582 275.892 li
90.1982 249.672 li
cp
.749722 .679194 .670497 .901457 cmyk
@
35.582 275.892 mo
90.1982 302.119 li
144.808 275.892 li
90.1982 302.119 mo
90.1982 307.269 li
@
%ADOBeginSubsetFont: HAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RDZVHY+Helvetica gcheck setglobal} if
1 1128 36 <0002001e0000053d05bd0002000a0044b8005d2b00b801b64558b800032f
1bb9000301c43e59b801b64558b800052f1bb9000501be3e59b801b64558
b800092f1bb9000901be3e59bb000001b9000700612b3031010b01133301
2303210323038edfed85e10215da95fdbb9fcc025a0289fd770363fa4301
b8fe4800>RDZVHY+Helvetica AddT42Char
1 2944 57 <000100340000053605bd0006008f40449001a00102400154010216010178
05e601026704680588040319280225120303040025120606050105020306
0300020504080817171a0402039e0500019e0619078e5e182b194e10f418
4dfd3939fd3939194e456544e618003f3c3f173c123901874d2e2b872e18
2b4b5279400c01020100030401000102060587087d10c487087d10c43130
015d005d717172090233012301011001a601a1dffde8d3fde905bdfb1d04
e3fa4305bd00>RDZVHY+Helvetica AddT42Char
RDZVHY+Helvetica /CharStrings get begin
/A 36 def
/V 57 def
end
RDZVHY+Helvetica /Encoding get
dup 65 /A put
dup 86 /V put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RDZVHY+Helvetica*1
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /.notdef
/slash 2{/.notdef}rp /two /three 13{/.notdef}rp /A /.notdef /C
/D /E 2{/.notdef}rp /H /I 4{/.notdef}rp /N /.notdef
/P 2{/.notdef}rp /S 2{/.notdef}rp /V 10{/.notdef}rp /a /.notdef
/c /.notdef /e /f /g /h /i /.notdef
/k /l /m /n /o /p /.notdef /r
/s /t /u /v /w /x /y /z
133{/.notdef}rp]
RDZVHY+Helvetica nf
RDZVHY+Helvetica*1 [10.7156 0 0 -10.7156 0 0 ]msf
50.0125 274.787 mo
(A)sh
56.9714 274.787 mo
(verage V)sh
99.274 274.787 mo
(elocity)sh
RDZVHZ+Helvetica*1 [8.0325 0 0 -8.0325 0 0 ]msf
85.4685 191.734 mo
(-)sh
87.1509 180.021 mo
147.426 208.96 li
147.426 231.449 li
87.1509 260.388 li
26.8756 231.449 li
26.8756 208.96 li
87.1509 180.021 li
cp
0 0 0 0 cmyk
f
87.1509 180.021 mo
147.426 208.96 li
147.426 231.449 li
87.1509 260.388 li
26.8756 231.449 li
26.8756 208.96 li
87.1509 180.021 li
cp
.749722 .679194 .670497 .901457 cmyk
@
26.8756 208.96 mo
87.1509 237.905 li
147.426 208.96 li
87.1509 237.905 mo
87.1509 260.388 li
@
%ADOBeginSubsetFont: HAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RDZVHY+Helvetica gcheck setglobal} if
1 2854 55 <00010021000004c905bd00070034401a01061e00070204080917171a00fb
0203250504fb0619088c5e182b4e10f44df43cfd3cf44e456544e6003f3f
3c4dfd3c3130011521112311213504c9fe11cafe1105bdaffaf2050eaf00
>RDZVHY+Helvetica AddT42Char
RDZVHY+Helvetica /CharStrings get begin
/T 55 def
end
RDZVHY+Helvetica /Encoding get
dup 84 /T put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RDZVHY+Helvetica*1
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /.notdef
/slash 2{/.notdef}rp /two /three 13{/.notdef}rp /A /.notdef /C
/D /E 2{/.notdef}rp /H /I 4{/.notdef}rp /N /.notdef
/P 2{/.notdef}rp /S /T /.notdef /V 10{/.notdef}rp /a
/.notdef /c /.notdef /e /f /g /h /i
/.notdef /k /l /m /n /o /p /.notdef
/r /s /t /u /v /w /x /y
/z 133{/.notdef}rp]
RDZVHY+Helvetica nf
RDZVHY+Helvetica*1 [10.7156 0 0 -10.7156 0 0 ]msf
54.3553 207.145 mo
(Displacement)sh
60.8119 219.87 mo
(T)sh
66.965 219.87 mo
(imeseries)sh
26.8756 212.978 mo
87.1509 242.305 li
@
26.8756 219.006 mo
87.1509 248.333 li
@
26.8756 225.033 mo
87.1509 254.361 li
@
147.426 226.232 mo
87.1509 254.22 li
@
147.426 220.205 mo
87.1509 248.192 li
@
146.757 214.177 mo
87.1509 242.165 li
@
87.1509 180.021 mo
147.426 208.96 li
147.426 231.449 li
87.1509 260.388 li
26.8756 231.449 li
26.8756 208.96 li
87.1509 180.021 li
cp
0 0 0 0 cmyk
f
87.1509 180.021 mo
147.426 208.96 li
147.426 231.449 li
87.1509 260.388 li
26.8756 231.449 li
26.8756 208.96 li
87.1509 180.021 li
cp
.749722 .679194 .670497 .901457 cmyk
@
26.8756 208.96 mo
87.1509 237.905 li
147.426 208.96 li
87.1509 237.905 mo
87.1509 260.388 li
@
RDZVHY+Helvetica*1 [10.7156 0 0 -10.7156 0 0 ]msf
54.3553 203.796 mo
(Displacement)sh
60.8119 216.521 mo
(T)sh
66.965 216.521 mo
(imeseries)sh
26.8756 213.648 mo
87.1509 242.975 li
@
26.8756 219.006 mo
87.1509 248.333 li
@
26.8756 225.033 mo
87.1509 254.361 li
@
147.426 226.232 mo
87.1509 254.22 li
@
147.426 220.205 mo
87.1509 248.192 li
@
147.306 214.579 mo
87.1509 242.835 li
@
%ADOBeginSubsetFont: KAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RDZVIA+Helvetica gcheck setglobal} if
1 4804 90 <00010012000005a1042f000c0120407e4704aa09028e09014607490b8703
8a08850aca02c403c607c908c60ac90b0b66076a08650a690b7607790876
0a790b85078a0b0a4607490b0247037700780503572816282b012b043b01
3b048f018f0406090401030b020305060c050006080a0b03070a0e17171a
0705069b080304c40a0209c40b00019b0c190d677e182b194e10f4184dfd
3939fd3939fd3939fd3939194e456544e618003f173c3f173c1217395d4b
5179400c0529120607060029120c0c0b0587102b87102b4b5279b4090a09
080ab8018b401312010102070604050529120606070908090a08b8018b40
0e120404030b0c00010029120c0c0b01874d2e2b87107dc41805872e182b
087d10c505872e182b877d10c405872e182b087d10c53130015d71717100
715d1b02331b013301230b012301d7ced1cad2dbb4fec9bbdad3bbfecb04
2ffcb4034cfcb90347fbd1033dfcc3042f00>RDZVIA+Helvetica AddT42Char
1 5152 193 <0002001c0000037405d20003001c005840310200111d10161d0d011c0639
19090600050a1e17171a0029011a191c29090611060f1a1f1a021afc0719
1d1ed2216742182b2b4ef44dfd5d39c42f3cfd3c10d6fd4e456544e6003f
3c3f3c4dfd3c3fedd4ed3f01313021231133012311233533353436333216
17152e01232207061d013315230374b4b4fdefb29595937b1827191c190b
4c190fb4b405bdfa43039c8ebe77730304a102012c1939858e00>RDZVIA+Helvetica AddT42Char
RDZVIA+Helvetica /CharStrings get begin
/w 90 def
/fl 193 def
end
RDZVIA+Helvetica /Encoding get
dup 119 /w put
dup 223 /fl put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RDZVIA+Helvetica*1
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 26{/.notdef}rp /D 11{/.notdef}rp
/P 16{/.notdef}rp /a /b /c /d /e /.notdef
/g /.notdef /i 2{/.notdef}rp /l /m /n /o
2{/.notdef}rp /r /s /t /u /.notdef /w 103{/.notdef}rp
/fl 32{/.notdef}rp]
RDZVIA+Helvetica nf
RDZVIA+Helvetica*1 [8.03671 0 0 -8.03671 0 0 ]msf
420.664 51.0987 mo
(Data )sh
439.873 51.0987 mo
(\337)sh
443.891 51.0987 mo
(ow)
[4.46964 0 ]xsh
2.00918 lw
379.989 49.7124 mo
392.646 49.7124 li
@
397.167 49.7124 mo
391.14 52.7261 li
392.646 49.7124 li
391.14 46.6986 li
397.167 49.7124 li
cp
f
397.167 49.7124 mo
391.14 52.7261 li
392.646 49.7124 li
391.14 46.6986 li
397.167 49.7124 li
cp
@
80.4537 75.5437 mo
140.729 104.483 li
140.729 126.972 li
80.4537 155.911 li
20.1783 126.972 li
20.1783 104.483 li
80.4537 75.5437 li
cp
0 0 0 0 cmyk
f
.669726 lw
80.4537 75.5437 mo
140.729 104.483 li
140.729 126.972 li
80.4537 155.911 li
20.1783 126.972 li
20.1783 104.483 li
80.4537 75.5437 li
cp
.749722 .679194 .670497 .901457 cmyk
@
20.1783 104.483 mo
80.4537 133.428 li
140.729 104.483 li
80.4537 133.428 mo
80.4537 155.911 li
@
%ADOBeginSubsetFont: HAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RDZVHY+Helvetica gcheck setglobal} if
1 2024 47 <0001009c0000044b05bd000500314013000203021e040508031a07010225
0500190607b80153b321765e182b2b4ef43c4dfd3c4e10e6003f3c4dfd3c
3f31301333112115219cc702e8fc5105bdfaf2af>RDZVHY+Helvetica AddT42Char
1 3794 71 <00020038ffda03ed05c2000b001d00774032370e470e570ea704a91b0525
0814020f1d1000081d1d07130a021d170b052e132e102911121a1f0b271a
191e1f87217242182b2b4ef44ded4e10f63c4dfde4e4003fed3f3fed3f11
39113931304379401a181c090a000101180b2600091c0b26000019022600
0a1b0826012b2b012b2b818181005d121633323635342623220615001716
1711331123350e0123220035341233f692a17da1a67a88a9018a53303dad
a23fac6fb3fefaefde015fe8d7c9cbc3d0ca0237341e4b021dfa3e956358
012dfaea0157>RDZVHY+Helvetica AddT42Char
RDZVHY+Helvetica /CharStrings get begin
/L 47 def
/d 71 def
end
RDZVHY+Helvetica /Encoding get
dup 76 /L put
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RDZVHY+Helvetica*1
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /.notdef
/slash 2{/.notdef}rp /two /three 13{/.notdef}rp /A /.notdef /C
/D /E 2{/.notdef}rp /H /I 2{/.notdef}rp /L /.notdef
/N /.notdef /P 2{/.notdef}rp /S /T /.notdef /V
10{/.notdef}rp /a /.notdef /c /d /e /f /g
/h /i /.notdef /k /l /m /n /o
/p /.notdef /r /s /t /u /v /w
/x /y /z 133{/.notdef}rp]
RDZVHY+Helvetica nf
RDZVHY+Helvetica*1 [10.7156 0 0 -10.7156 0 0 ]msf
34.8495 107.356 mo
(Coregistered SLCs)sh
20.1783 109.171 mo
80.4537 138.498 li
@
20.1783 114.528 mo
80.4537 143.856 li
@
20.1783 120.556 mo
80.4537 149.883 li
@
140.729 121.755 mo
80.4537 149.743 li
@
140.729 115.727 mo
80.4537 143.715 li
@
140.608 110.102 mo
80.4537 138.357 li
@
380.036 70.1859 mo
399.357 70.1859 li
399.597 70.1859 399.827 70.2318 400.049 70.3235 cv
400.271 70.4153 400.466 70.5459 400.636 70.7155 cv
400.805 70.8851 400.936 71.0806 401.028 71.3022 cv
401.119 71.5237 401.165 71.7543 401.165 71.9941 cv
401.165 80.4327 li
401.165 80.6725 401.119 80.9031 401.028 81.1247 cv
400.936 81.3462 400.805 81.5418 400.636 81.7113 cv
400.466 81.8809 400.271 82.0115 400.049 82.1033 cv
399.827 82.1951 399.597 82.2409 399.357 82.241 cv
380.036 82.241 li
379.796 82.2409 379.565 82.1951 379.343 82.1033 cv
379.122 82.0115 378.926 81.8809 378.757 81.7113 cv
378.587 81.5418 378.457 81.3462 378.365 81.1247 cv
378.273 80.9031 378.227 80.6725 378.227 80.4327 cv
378.227 71.9941 li
378.227 71.7543 378.273 71.5237 378.365 71.3021 cv
378.457 71.0806 378.587 70.8851 378.757 70.7155 cv
378.926 70.5459 379.122 70.4153 379.343 70.3235 cv
379.565 70.2318 379.796 70.1859 380.036 70.1859 cv
cp
.0274357 .0173037 .0173037 0 cmyk
f
4 ml
380.036 70.1859 mo
399.357 70.1859 li
399.597 70.1859 399.827 70.2318 400.049 70.3235 cv
400.271 70.4153 400.466 70.5459 400.636 70.7155 cv
400.805 70.8851 400.936 71.0806 401.028 71.3022 cv
401.119 71.5237 401.165 71.7543 401.165 71.9941 cv
401.165 80.4327 li
401.165 80.6725 401.119 80.9031 401.028 81.1247 cv
400.936 81.3462 400.805 81.5418 400.636 81.7113 cv
400.466 81.8809 400.271 82.0115 400.049 82.1033 cv
399.827 82.1951 399.597 82.2409 399.357 82.241 cv
380.036 82.241 li
379.796 82.2409 379.565 82.1951 379.343 82.1033 cv
379.122 82.0115 378.926 81.8809 378.757 81.7113 cv
378.587 81.5418 378.457 81.3462 378.365 81.1247 cv
378.273 80.9031 378.227 80.6725 378.227 80.4327 cv
378.227 71.9941 li
378.227 71.7543 378.273 71.5237 378.365 71.3021 cv
378.457 71.0806 378.587 70.8851 378.757 70.7155 cv
378.926 70.5459 379.122 70.4153 379.343 70.3235 cv
379.565 70.2318 379.796 70.1859 380.036 70.1859 cv
cp
.597711 .511803 .507713 .201297 cmyk
@
.749722 .679194 .670497 .901457 cmyk
%ADOBeginSubsetFont: KAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RDZVIA+Helvetica gcheck setglobal} if
1 572 50 <00030050ffd505e805e5000f001b001c008a402c8705c700c701c302c808
c90a064308153a0f031b3a07091c021c1c0b1231031a1e18310b191d1ed8
216a66182b2b4ef44ded4e10f64ded12392f003f3fed3fed313043794032
001a0d26012509250526160e18320014001232011a081832001006123201
170c1532011302153201190a1b320011041b32002b2b2b2b012b2b2b2b2b
2b2b2b81005d001716111007022120272611103712210012351000232200
1114122103049bbb92a7c4fe95feadc2ad94be0174011bebfef1ebe4fee0
f701150e05e5fac3fed0feb7daff00e0d8014a012ad40110faa20179f501
03013cfec7fecff4feb1055e>RDZVIA+Helvetica AddT42Char
1 3650 83 <00020076fe5504250449000e00220074402ca908a717022808201c110e06
1d15070f060e1d1c0b220e0227181a240a2e102e2129220f1923248721bd
5d182b2b4ef43c4dfde4e44e10f64ded003f3fed3f3fed11391239313043
79401c161b00051a260426001b022601051602260101190e260003170626
012b2b012b2b2b2b8181005d243635342726232207061514171633013315
363736333212111007062322272627112302c6a72546babb45252546bafe
2eaf36405b7bb6feb7749a7952303bb479d3d2805cb1bb649a7c57a603b1
8e49283cfee9fefdfea2965f351e49fddd00>RDZVIA+Helvetica AddT42Char
RDZVIA+Helvetica /CharStrings get begin
/O 50 def
/p 83 def
end
RDZVIA+Helvetica /Encoding get
dup 79 /O put
dup 112 /p put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/RDZVIA+Helvetica*1
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 26{/.notdef}rp /D 10{/.notdef}rp
/O /P 16{/.notdef}rp /a /b /c /d /e
/.notdef /g /.notdef /i 2{/.notdef}rp /l /m /n
/o /p /.notdef /r /s /t /u /.notdef
/w 103{/.notdef}rp /fl 32{/.notdef}rp]
RDZVIA+Helvetica nf
RDZVIA+Helvetica*1 [8.03671 0 0 -8.03671 0 0 ]msf
420.884 79.2272 mo
(Optional module)sh
1.33945 lw
10 ml
353.367 92.2868 mo
368.101 92.2868 li
368.101 126.778 li
381.495 126.778 li
@
175.253 73.5345 mo
347.976 73.5345 li
348.352 73.5345 348.724 73.5712 349.093 73.6445 cv
349.462 73.7179 349.82 73.8265 350.167 73.9704 cv
350.514 74.1143 350.844 74.2907 351.157 74.4995 cv
351.47 74.7084 351.759 74.9458 352.025 75.2117 cv
352.291 75.4775 352.528 75.7668 352.737 76.0794 cv
352.946 76.392 353.122 76.722 353.266 77.0694 cv
353.41 77.4167 353.518 77.7748 353.592 78.1436 cv
353.665 78.5123 353.702 78.8847 353.702 79.2607 cv
353.702 105.983 li
353.702 106.359 353.665 106.731 353.592 107.1 cv
353.518 107.469 353.41 107.827 353.266 108.174 cv
353.122 108.521 352.946 108.851 352.737 109.164 cv
352.528 109.477 352.291 109.766 352.025 110.032 cv
351.759 110.298 351.47 110.535 351.157 110.744 cv
350.844 110.953 350.514 111.129 350.167 111.273 cv
349.82 111.417 349.462 111.526 349.093 111.599 cv
348.724 111.672 348.352 111.709 347.976 111.709 cv
175.253 111.709 li
174.877 111.709 174.505 111.672 174.136 111.599 cv
173.767 111.526 173.409 111.417 173.062 111.273 cv
172.715 111.129 172.385 110.953 172.072 110.744 cv
171.759 110.535 171.47 110.298 171.204 110.032 cv
170.939 109.766 170.701 109.477 170.492 109.164 cv
170.283 108.851 170.107 108.521 169.963 108.174 cv
169.819 107.827 169.711 107.469 169.637 107.1 cv
169.564 106.731 169.527 106.359 169.527 105.983 cv
169.527 79.2607 li
169.527 78.8847 169.564 78.5123 169.637 78.1436 cv
169.711 77.7748 169.819 77.4167 169.963 77.0694 cv
170.107 76.722 170.283 76.392 170.492 76.0794 cv
170.701 75.7668 170.939 75.4775 171.204 75.2117 cv
171.47 74.9458 171.759 74.7084 172.072 74.4995 cv
172.385 74.2907 172.715 74.1143 173.062 73.9704 cv
173.409 73.8265 173.767 73.7179 174.136 73.6445 cv
174.505 73.5712 174.877 73.5345 175.253 73.5345 cv
cp
0 0 0 0 cmyk
f
.669726 lw
4 ml
175.253 73.5345 mo
347.976 73.5345 li
348.352 73.5345 348.724 73.5712 349.093 73.6445 cv
349.462 73.7179 349.82 73.8265 350.167 73.9704 cv
350.514 74.1143 350.844 74.2907 351.157 74.4995 cv
351.47 74.7084 351.759 74.9458 352.025 75.2117 cv
352.291 75.4775 352.528 75.7668 352.737 76.0794 cv
352.946 76.392 353.122 76.722 353.266 77.0694 cv
353.41 77.4167 353.518 77.7748 353.592 78.1436 cv
353.665 78.5123 353.702 78.8847 353.702 79.2607 cv
353.702 105.983 li
353.702 106.359 353.665 106.731 353.592 107.1 cv
353.518 107.469 353.41 107.827 353.266 108.174 cv
353.122 108.521 352.946 108.851 352.737 109.164 cv
352.528 109.477 352.291 109.766 352.025 110.032 cv
351.759 110.298 351.47 110.535 351.157 110.744 cv
350.844 110.953 350.514 111.129 350.167 111.273 cv
349.82 111.417 349.462 111.526 349.093 111.599 cv
348.724 111.672 348.352 111.709 347.976 111.709 cv
175.253 111.709 li
174.877 111.709 174.505 111.672 174.136 111.599 cv
173.767 111.526 173.409 111.417 173.062 111.273 cv
172.715 111.129 172.385 110.953 172.072 110.744 cv
171.759 110.535 171.47 110.298 171.204 110.032 cv
170.939 109.766 170.701 109.477 170.492 109.164 cv
170.283 108.851 170.107 108.521 169.963 108.174 cv
169.819 107.827 169.711 107.469 169.637 107.1 cv
169.564 106.731 169.527 106.359 169.527 105.983 cv
169.527 79.2607 li
169.527 78.8847 169.564 78.5123 169.637 78.1436 cv
169.711 77.7748 169.819 77.4167 169.963 77.0694 cv
170.107 76.722 170.283 76.392 170.492 76.0794 cv
170.701 75.7668 170.939 75.4775 171.204 75.2117 cv
171.47 74.9458 171.759 74.7084 172.072 74.4995 cv
172.385 74.2907 172.715 74.1143 173.062 73.9704 cv
173.409 73.8265 173.767 73.7179 174.136 73.6445 cv
174.505 73.5712 174.877 73.5345 175.253 73.5345 cv
cp
.749722 .679194 .670497 .901457 cmyk
@
RDZVHY+Helvetica*1 [10.7156 0 0 -10.7156 0 0 ]msf
230.598 95.9703 mo
(PS Selection)sh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/RDZVHY+Helvetica*1 uf
/RDZVHY+Helvetica uf
/HAAAAA+Helvetica uf
/RDZVIA+Helvetica*1 uf
/RDZVIA+Helvetica uf
/KAAAAA+Helvetica uf
/RDZVHX+Helvetica*1 uf
/RDZVHX+Helvetica uf
/GAAAAA+Helvetica uf
/RDZVHZ+Helvetica*1 uf
/RDZVHZ+Helvetica uf
/IAAAAA+Helvetica uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources:
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures:
%%DocumentSuppliedFeatures:
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors:
%%CMYKCustomColor:
%%RGBCustomColor:
%%EOF
